/*
 * RSA signature test data for Cryptech project, automatically generated by
 * test-rsa.py using PyCrypto version 2.6.1. Do not edit.
 *
 * Plaintext: "You can hack anything you want with TECO and DDT."
 * SHA-256: 8e36fc9aa31724c32416263c0366a175fabbb92b741ca6496107074d0343b597
 */

/* 1024-bit RSA private key (PKCS #8)
-----BEGIN PRIVATE KEY-----
MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBANB17AqVBI74yqaQ
c42dWOkXZLQ3ULWMrYpuMZkTX4DuhOsr3ljTjuNYJeker96xuqFaFgsAV8R8x3Ze
MYaKPhVe5XzvsAjE3WoKie6YpO6clxoH3mHlsNPPcOHNxqDeW0UfL7nbmVGWny+I
S0sJdJrmxN2+fuYfeSZcat+xazAVAgMBAAECgYA/8myeMmhbk2ZXAijwYDxOBKcX
wYA4sRbrSDJeytqZKpILskFa7kr+4qN+h7NblRmzNXddmJVT6RMm9G4s32t7hKq/
qe8kxgC1aHKtXtuQQejs1/hTUTP73vySx0I4QiZ9QOX1yRvXRZV45GD8hYN0MXK+
03O2lXzA1qaOMxVqYQJBANaRRDD2v64QZYrtBNjRMiryChl8+X0hxd33QXW4AR1A
SClmLlmJh5RkmsZopkuHEMduJn2yqSQq8wcGnKTiU+cCQQD4tsblcx0D/KZA9i3h
iMVWvGgJnaxWIRJjQi+6gIVqiBlJr/4FqEi3mXEURkLdGbrBBTdTtp2kKfS96xOO
eZyjAkBbThWmgFmwyGltZM7bNKoUfEqv7e58wRJiEgVZAqP2vpP2ifTPRSbcjrMO
GxooqaEKPGVEt/Ih4eTo6Hdf8q+hAkEAllMK1kYERJOg/OSOiKF8/Na1XxKAxjIJ
BhtL88KYYPJPrn0D4PF8uhOxCBsLcM2LVfzMGvnmQAHn3h5GXLfeVwJAYcoQDtnx
Et+5wWaTYN9bvQYRBqcChxc/MuUBEyOSxFuyIqIRb3V2XvsXiB1WYqIu6Nsrbzfv
RdWc9bHUt/bBEw==
-----END PRIVATE KEY-----
*/

static const uint8_t n_1024[] = { /* key component n, 128 bytes */
  0xd0, 0x75, 0xec, 0x0a, 0x95, 0x04, 0x8e, 0xf8, 0xca, 0xa6, 0x90, 0x73,
  0x8d, 0x9d, 0x58, 0xe9, 0x17, 0x64, 0xb4, 0x37, 0x50, 0xb5, 0x8c, 0xad,
  0x8a, 0x6e, 0x31, 0x99, 0x13, 0x5f, 0x80, 0xee, 0x84, 0xeb, 0x2b, 0xde,
  0x58, 0xd3, 0x8e, 0xe3, 0x58, 0x25, 0xe9, 0x1e, 0xaf, 0xde, 0xb1, 0xba,
  0xa1, 0x5a, 0x16, 0x0b, 0x00, 0x57, 0xc4, 0x7c, 0xc7, 0x76, 0x5e, 0x31,
  0x86, 0x8a, 0x3e, 0x15, 0x5e, 0xe5, 0x7c, 0xef, 0xb0, 0x08, 0xc4, 0xdd,
  0x6a, 0x0a, 0x89, 0xee, 0x98, 0xa4, 0xee, 0x9c, 0x97, 0x1a, 0x07, 0xde,
  0x61, 0xe5, 0xb0, 0xd3, 0xcf, 0x70, 0xe1, 0xcd, 0xc6, 0xa0, 0xde, 0x5b,
  0x45, 0x1f, 0x2f, 0xb9, 0xdb, 0x99, 0x51, 0x96, 0x9f, 0x2f, 0x88, 0x4b,
  0x4b, 0x09, 0x74, 0x9a, 0xe6, 0xc4, 0xdd, 0xbe, 0x7e, 0xe6, 0x1f, 0x79,
  0x26, 0x5c, 0x6a, 0xdf, 0xb1, 0x6b, 0x30, 0x15
};

static const uint8_t e_1024[] = { /* key component e, 4 bytes */
#if 1
  /*
   * Test Joachim's theory that it's just a known bug with short
   * numbers: pad e out to same size as modulus, so an extra 124
   * leading zeros.
   */
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00,
#endif
  0x00, 0x01, 0x00, 0x01
};

static const uint8_t d_1024[] = { /* key component d, 128 bytes */
  0x3f, 0xf2, 0x6c, 0x9e, 0x32, 0x68, 0x5b, 0x93, 0x66, 0x57, 0x02, 0x28,
  0xf0, 0x60, 0x3c, 0x4e, 0x04, 0xa7, 0x17, 0xc1, 0x80, 0x38, 0xb1, 0x16,
  0xeb, 0x48, 0x32, 0x5e, 0xca, 0xda, 0x99, 0x2a, 0x92, 0x0b, 0xb2, 0x41,
  0x5a, 0xee, 0x4a, 0xfe, 0xe2, 0xa3, 0x7e, 0x87, 0xb3, 0x5b, 0x95, 0x19,
  0xb3, 0x35, 0x77, 0x5d, 0x98, 0x95, 0x53, 0xe9, 0x13, 0x26, 0xf4, 0x6e,
  0x2c, 0xdf, 0x6b, 0x7b, 0x84, 0xaa, 0xbf, 0xa9, 0xef, 0x24, 0xc6, 0x00,
  0xb5, 0x68, 0x72, 0xad, 0x5e, 0xdb, 0x90, 0x41, 0xe8, 0xec, 0xd7, 0xf8,
  0x53, 0x51, 0x33, 0xfb, 0xde, 0xfc, 0x92, 0xc7, 0x42, 0x38, 0x42, 0x26,
  0x7d, 0x40, 0xe5, 0xf5, 0xc9, 0x1b, 0xd7, 0x45, 0x95, 0x78, 0xe4, 0x60,
  0xfc, 0x85, 0x83, 0x74, 0x31, 0x72, 0xbe, 0xd3, 0x73, 0xb6, 0x95, 0x7c,
  0xc0, 0xd6, 0xa6, 0x8e, 0x33, 0x15, 0x6a, 0x61
};

static const uint8_t p_1024[] = { /* key component p, 64 bytes */
  0xd6, 0x91, 0x44, 0x30, 0xf6, 0xbf, 0xae, 0x10, 0x65, 0x8a, 0xed, 0x04,
  0xd8, 0xd1, 0x32, 0x2a, 0xf2, 0x0a, 0x19, 0x7c, 0xf9, 0x7d, 0x21, 0xc5,
  0xdd, 0xf7, 0x41, 0x75, 0xb8, 0x01, 0x1d, 0x40, 0x48, 0x29, 0x66, 0x2e,
  0x59, 0x89, 0x87, 0x94, 0x64, 0x9a, 0xc6, 0x68, 0xa6, 0x4b, 0x87, 0x10,
  0xc7, 0x6e, 0x26, 0x7d, 0xb2, 0xa9, 0x24, 0x2a, 0xf3, 0x07, 0x06, 0x9c,
  0xa4, 0xe2, 0x53, 0xe7
};

static const uint8_t q_1024[] = { /* key component q, 64 bytes */
  0xf8, 0xb6, 0xc6, 0xe5, 0x73, 0x1d, 0x03, 0xfc, 0xa6, 0x40, 0xf6, 0x2d,
  0xe1, 0x88, 0xc5, 0x56, 0xbc, 0x68, 0x09, 0x9d, 0xac, 0x56, 0x21, 0x12,
  0x63, 0x42, 0x2f, 0xba, 0x80, 0x85, 0x6a, 0x88, 0x19, 0x49, 0xaf, 0xfe,
  0x05, 0xa8, 0x48, 0xb7, 0x99, 0x71, 0x14, 0x46, 0x42, 0xdd, 0x19, 0xba,
  0xc1, 0x05, 0x37, 0x53, 0xb6, 0x9d, 0xa4, 0x29, 0xf4, 0xbd, 0xeb, 0x13,
  0x8e, 0x79, 0x9c, 0xa3
};

static const uint8_t u_1024[] = { /* key component u, 64 bytes */
  0x87, 0x5c, 0xc3, 0x4c, 0x33, 0xc7, 0x67, 0xfa, 0xc6, 0xf6, 0xcd, 0xf4,
  0x33, 0x85, 0x07, 0x78, 0x7f, 0x56, 0x80, 0x30, 0xee, 0x4c, 0x34, 0x03,
  0xa0, 0x5d, 0xa7, 0x34, 0x0d, 0xc9, 0x18, 0x8e, 0xd0, 0xd5, 0xe2, 0xb9,
  0x0b, 0x53, 0x4c, 0xb5, 0x00, 0x5b, 0x10, 0x9f, 0xba, 0xbf, 0x2f, 0x65,
  0x0a, 0x40, 0x58, 0x18, 0xb3, 0x83, 0xa0, 0x0c, 0x71, 0x01, 0xa4, 0x86,
  0xbe, 0xcc, 0x1b, 0x7b
};

static const uint8_t m_1024[] = { /* message to be signed, 128 bytes */
  0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60,
  0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x04, 0x20,
  0x8e, 0x36, 0xfc, 0x9a, 0xa3, 0x17, 0x24, 0xc3, 0x24, 0x16, 0x26, 0x3c,
  0x03, 0x66, 0xa1, 0x75, 0xfa, 0xbb, 0xb9, 0x2b, 0x74, 0x1c, 0xa6, 0x49,
  0x61, 0x07, 0x07, 0x4d, 0x03, 0x43, 0xb5, 0x97
};

static const uint8_t s_1024[] = { /* signed message, 128 bytes */
  0x06, 0x33, 0x9a, 0x64, 0x36, 0x7d, 0xb0, 0x2a, 0xf4, 0x11, 0x58, 0xcc,
  0x95, 0xe7, 0x60, 0x49, 0x45, 0x19, 0xc1, 0x65, 0x11, 0x11, 0x84, 0xbe,
  0xe4, 0x1d, 0x8e, 0xe2, 0x2a, 0xe5, 0xf5, 0xd1, 0x1d, 0xa7, 0xf9, 0x62,
  0xac, 0x93, 0xac, 0x88, 0x91, 0x5e, 0xee, 0x13, 0xa3, 0x35, 0x0c, 0x22,
  0xf0, 0xdf, 0xa6, 0x2e, 0xfd, 0xfc, 0x2b, 0x62, 0x29, 0xf2, 0x6e, 0x27,
  0xbe, 0xbd, 0xc8, 0x4e, 0x47, 0x46, 0xdf, 0x79, 0x7b, 0x38, 0x7a, 0xd2,
  0x13, 0x42, 0x3c, 0x9f, 0x98, 0xe8, 0xa1, 0x46, 0xff, 0x48, 0x6b, 0x6c,
  0x1a, 0x85, 0x41, 0x4e, 0x73, 0x11, 0x71, 0x21, 0xb7, 0x00, 0xe5, 0x47,
  0xab, 0x4e, 0x07, 0xb2, 0x21, 0xb9, 0x88, 0xb8, 0x24, 0xdd, 0x77, 0xc2,
  0x04, 0x6b, 0x0a, 0x20, 0xcd, 0xdb, 0x98, 0x6a, 0xac, 0x75, 0xc2, 0xf2,
  0xb0, 0x44, 0xed, 0x59, 0xea, 0x56, 0x58, 0x79
};

/* 2048-bit RSA private key (PKCS #8)
-----BEGIN PRIVATE KEY-----
MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC5tGlpsGBD/vGf
MiPLUUoggaENQ4tothWYpc+ve35q5AhUqzz04yZ0gnHey2rkg5qNfwiaukL8r6QD
Mgq/7Wh6hWoT8LBUWIljN/9zzb407brHZBKRRKl/j3WXC2kJ31+SbE7BXWCDqMmZ
4X2sphvQLI9muvN3HtgZxWVpzFfMX+I4eveeoVZcc5vYrUNqTS4aysq2TOzt4x56
82d1spEGWEkbWgN1rlUlyCQE3Itdo1FPkPS7dVS799ajiQZRx1dHbojhDxT+0uTd
Q9V14qehygOGQGBft87dU7t/BR0jatt8WlH+6EqXTfZ2ENywNjDZC1lr1USN8Ksm
CIYBIcgjAgMBAAECggEADfVPjxAgzDuXcb3VDu03QyY7MsIG8oHtMaIU8D26DNLD
BYoxdL62Hz/Gy1ZC3JY/wa7wuKCTdGbHTy4tvKtdlQf+Jy2KM2zMNtb4rn2idFwC
FAajlqOwkdP4pLfI12MgzeKyMLqSDJNdQ+G9DoMVyBnxVWlr72I0IAvESaWAW+4g
IsRjEYEfNxFHk5bM11zEw9487dUegDWNYOod6PQ8bHhElDcKLcAGI6QNJ7ob9GrC
qMxWQpZTp14/DA6zaarm6x8ZfgpFFCSfWtVO4nPQxm3h6/4fUjA+4kd2UaStBd91
SyUFg7PKT2mzZlAlOsPUrWIoZvT0M6JXDJ11lBRZoQKBgQDFCvJP0fKGyh4lvWUq
+XXaPZiK7Q7+xaGFjbSVQUxrXWRJOQ8MIStgziEEqzIkjrbGR8LtoDaZ9qFcOoaS
QSHj4cNNjKVsnQR9BIik5872P/6qr+SNh0K+MQ18wO/7JzF3DugaiI3ebqMfc5aE
jsdDmbGinrhhVKJNkf2HUm4qewKBgQDxRP8nVmQlT5RqG8ggBRPQJCJOIDxamYvU
qsBJDe8rjDrvVSoZ5ojH381UlANjqa1K7GrQzXf8rv8LY2j2zNy3KedGtCb5o+0y
jfcSohnC71L33pFIl2oYi4QOqmLyqjEe3IoxMDsi7HyLjL1N5be2aKyq/45ukxSk
7yufFUrceQKBgCPbSBkKZY3tveq0OnLFjpK2Xsn5NZ9bK3d4QAJhLZzkE9nXTkuw
xYoKOKv201sftVcDvA8t9oGyBc8Yv2BiBd7IOJgmHfxT3ns5lfwcSuc44gkBlR/E
G3ssxf2Lxp/3k+LMjaQ2cUqm63xPtnZM3SoKD+893uOnWRmwlWhIsc99AoGAeyl8
kukwADfqjGwYMfhFj/gSJw2foaRGVE7CD8j0MafJIgm4jzY21slxeN6CCGtCkj+z
m1l4Cd6PRZH+sBYOCdZzQI2QY9mBqU/9M17ahb9D/FJ6mbLprxPxWscx8axdnOJ6
DPgRCBfu0BINROmiaZRvqG8Cl4GvhS6uduwYpgkCgYB4D8aOcb39bdAeycSc25Ds
JEH6k8yf64JbLUr9Yh+4vmix12Mg6E7hjQWy5XF64wDCHPcuBmY5kYfnMU4XJ9P4
SGeS4wajJua2pMDdZiANd4KwAEl/hBoFLTRBsL5qjJ8T33Agu38uCaTBczBp5fS5
G3nOVVHOuTBEMDUuwZQPmA==
-----END PRIVATE KEY-----
*/

static const uint8_t n_2048[] = { /* key component n, 256 bytes */
  0xb9, 0xb4, 0x69, 0x69, 0xb0, 0x60, 0x43, 0xfe, 0xf1, 0x9f, 0x32, 0x23,
  0xcb, 0x51, 0x4a, 0x20, 0x81, 0xa1, 0x0d, 0x43, 0x8b, 0x68, 0xb6, 0x15,
  0x98, 0xa5, 0xcf, 0xaf, 0x7b, 0x7e, 0x6a, 0xe4, 0x08, 0x54, 0xab, 0x3c,
  0xf4, 0xe3, 0x26, 0x74, 0x82, 0x71, 0xde, 0xcb, 0x6a, 0xe4, 0x83, 0x9a,
  0x8d, 0x7f, 0x08, 0x9a, 0xba, 0x42, 0xfc, 0xaf, 0xa4, 0x03, 0x32, 0x0a,
  0xbf, 0xed, 0x68, 0x7a, 0x85, 0x6a, 0x13, 0xf0, 0xb0, 0x54, 0x58, 0x89,
  0x63, 0x37, 0xff, 0x73, 0xcd, 0xbe, 0x34, 0xed, 0xba, 0xc7, 0x64, 0x12,
  0x91, 0x44, 0xa9, 0x7f, 0x8f, 0x75, 0x97, 0x0b, 0x69, 0x09, 0xdf, 0x5f,
  0x92, 0x6c, 0x4e, 0xc1, 0x5d, 0x60, 0x83, 0xa8, 0xc9, 0x99, 0xe1, 0x7d,
  0xac, 0xa6, 0x1b, 0xd0, 0x2c, 0x8f, 0x66, 0xba, 0xf3, 0x77, 0x1e, 0xd8,
  0x19, 0xc5, 0x65, 0x69, 0xcc, 0x57, 0xcc, 0x5f, 0xe2, 0x38, 0x7a, 0xf7,
  0x9e, 0xa1, 0x56, 0x5c, 0x73, 0x9b, 0xd8, 0xad, 0x43, 0x6a, 0x4d, 0x2e,
  0x1a, 0xca, 0xca, 0xb6, 0x4c, 0xec, 0xed, 0xe3, 0x1e, 0x7a, 0xf3, 0x67,
  0x75, 0xb2, 0x91, 0x06, 0x58, 0x49, 0x1b, 0x5a, 0x03, 0x75, 0xae, 0x55,
  0x25, 0xc8, 0x24, 0x04, 0xdc, 0x8b, 0x5d, 0xa3, 0x51, 0x4f, 0x90, 0xf4,
  0xbb, 0x75, 0x54, 0xbb, 0xf7, 0xd6, 0xa3, 0x89, 0x06, 0x51, 0xc7, 0x57,
  0x47, 0x6e, 0x88, 0xe1, 0x0f, 0x14, 0xfe, 0xd2, 0xe4, 0xdd, 0x43, 0xd5,
  0x75, 0xe2, 0xa7, 0xa1, 0xca, 0x03, 0x86, 0x40, 0x60, 0x5f, 0xb7, 0xce,
  0xdd, 0x53, 0xbb, 0x7f, 0x05, 0x1d, 0x23, 0x6a, 0xdb, 0x7c, 0x5a, 0x51,
  0xfe, 0xe8, 0x4a, 0x97, 0x4d, 0xf6, 0x76, 0x10, 0xdc, 0xb0, 0x36, 0x30,
  0xd9, 0x0b, 0x59, 0x6b, 0xd5, 0x44, 0x8d, 0xf0, 0xab, 0x26, 0x08, 0x86,
  0x01, 0x21, 0xc8, 0x23
};

static const uint8_t e_2048[] = { /* key component e, 4 bytes */
  0x00, 0x01, 0x00, 0x01
};

static const uint8_t d_2048[] = { /* key component d, 256 bytes */
  0x0d, 0xf5, 0x4f, 0x8f, 0x10, 0x20, 0xcc, 0x3b, 0x97, 0x71, 0xbd, 0xd5,
  0x0e, 0xed, 0x37, 0x43, 0x26, 0x3b, 0x32, 0xc2, 0x06, 0xf2, 0x81, 0xed,
  0x31, 0xa2, 0x14, 0xf0, 0x3d, 0xba, 0x0c, 0xd2, 0xc3, 0x05, 0x8a, 0x31,
  0x74, 0xbe, 0xb6, 0x1f, 0x3f, 0xc6, 0xcb, 0x56, 0x42, 0xdc, 0x96, 0x3f,
  0xc1, 0xae, 0xf0, 0xb8, 0xa0, 0x93, 0x74, 0x66, 0xc7, 0x4f, 0x2e, 0x2d,
  0xbc, 0xab, 0x5d, 0x95, 0x07, 0xfe, 0x27, 0x2d, 0x8a, 0x33, 0x6c, 0xcc,
  0x36, 0xd6, 0xf8, 0xae, 0x7d, 0xa2, 0x74, 0x5c, 0x02, 0x14, 0x06, 0xa3,
  0x96, 0xa3, 0xb0, 0x91, 0xd3, 0xf8, 0xa4, 0xb7, 0xc8, 0xd7, 0x63, 0x20,
  0xcd, 0xe2, 0xb2, 0x30, 0xba, 0x92, 0x0c, 0x93, 0x5d, 0x43, 0xe1, 0xbd,
  0x0e, 0x83, 0x15, 0xc8, 0x19, 0xf1, 0x55, 0x69, 0x6b, 0xef, 0x62, 0x34,
  0x20, 0x0b, 0xc4, 0x49, 0xa5, 0x80, 0x5b, 0xee, 0x20, 0x22, 0xc4, 0x63,
  0x11, 0x81, 0x1f, 0x37, 0x11, 0x47, 0x93, 0x96, 0xcc, 0xd7, 0x5c, 0xc4,
  0xc3, 0xde, 0x3c, 0xed, 0xd5, 0x1e, 0x80, 0x35, 0x8d, 0x60, 0xea, 0x1d,
  0xe8, 0xf4, 0x3c, 0x6c, 0x78, 0x44, 0x94, 0x37, 0x0a, 0x2d, 0xc0, 0x06,
  0x23, 0xa4, 0x0d, 0x27, 0xba, 0x1b, 0xf4, 0x6a, 0xc2, 0xa8, 0xcc, 0x56,
  0x42, 0x96, 0x53, 0xa7, 0x5e, 0x3f, 0x0c, 0x0e, 0xb3, 0x69, 0xaa, 0xe6,
  0xeb, 0x1f, 0x19, 0x7e, 0x0a, 0x45, 0x14, 0x24, 0x9f, 0x5a, 0xd5, 0x4e,
  0xe2, 0x73, 0xd0, 0xc6, 0x6d, 0xe1, 0xeb, 0xfe, 0x1f, 0x52, 0x30, 0x3e,
  0xe2, 0x47, 0x76, 0x51, 0xa4, 0xad, 0x05, 0xdf, 0x75, 0x4b, 0x25, 0x05,
  0x83, 0xb3, 0xca, 0x4f, 0x69, 0xb3, 0x66, 0x50, 0x25, 0x3a, 0xc3, 0xd4,
  0xad, 0x62, 0x28, 0x66, 0xf4, 0xf4, 0x33, 0xa2, 0x57, 0x0c, 0x9d, 0x75,
  0x94, 0x14, 0x59, 0xa1
};

static const uint8_t p_2048[] = { /* key component p, 128 bytes */
  0xc5, 0x0a, 0xf2, 0x4f, 0xd1, 0xf2, 0x86, 0xca, 0x1e, 0x25, 0xbd, 0x65,
  0x2a, 0xf9, 0x75, 0xda, 0x3d, 0x98, 0x8a, 0xed, 0x0e, 0xfe, 0xc5, 0xa1,
  0x85, 0x8d, 0xb4, 0x95, 0x41, 0x4c, 0x6b, 0x5d, 0x64, 0x49, 0x39, 0x0f,
  0x0c, 0x21, 0x2b, 0x60, 0xce, 0x21, 0x04, 0xab, 0x32, 0x24, 0x8e, 0xb6,
  0xc6, 0x47, 0xc2, 0xed, 0xa0, 0x36, 0x99, 0xf6, 0xa1, 0x5c, 0x3a, 0x86,
  0x92, 0x41, 0x21, 0xe3, 0xe1, 0xc3, 0x4d, 0x8c, 0xa5, 0x6c, 0x9d, 0x04,
  0x7d, 0x04, 0x88, 0xa4, 0xe7, 0xce, 0xf6, 0x3f, 0xfe, 0xaa, 0xaf, 0xe4,
  0x8d, 0x87, 0x42, 0xbe, 0x31, 0x0d, 0x7c, 0xc0, 0xef, 0xfb, 0x27, 0x31,
  0x77, 0x0e, 0xe8, 0x1a, 0x88, 0x8d, 0xde, 0x6e, 0xa3, 0x1f, 0x73, 0x96,
  0x84, 0x8e, 0xc7, 0x43, 0x99, 0xb1, 0xa2, 0x9e, 0xb8, 0x61, 0x54, 0xa2,
  0x4d, 0x91, 0xfd, 0x87, 0x52, 0x6e, 0x2a, 0x7b
};

static const uint8_t q_2048[] = { /* key component q, 128 bytes */
  0xf1, 0x44, 0xff, 0x27, 0x56, 0x64, 0x25, 0x4f, 0x94, 0x6a, 0x1b, 0xc8,
  0x20, 0x05, 0x13, 0xd0, 0x24, 0x22, 0x4e, 0x20, 0x3c, 0x5a, 0x99, 0x8b,
  0xd4, 0xaa, 0xc0, 0x49, 0x0d, 0xef, 0x2b, 0x8c, 0x3a, 0xef, 0x55, 0x2a,
  0x19, 0xe6, 0x88, 0xc7, 0xdf, 0xcd, 0x54, 0x94, 0x03, 0x63, 0xa9, 0xad,
  0x4a, 0xec, 0x6a, 0xd0, 0xcd, 0x77, 0xfc, 0xae, 0xff, 0x0b, 0x63, 0x68,
  0xf6, 0xcc, 0xdc, 0xb7, 0x29, 0xe7, 0x46, 0xb4, 0x26, 0xf9, 0xa3, 0xed,
  0x32, 0x8d, 0xf7, 0x12, 0xa2, 0x19, 0xc2, 0xef, 0x52, 0xf7, 0xde, 0x91,
  0x48, 0x97, 0x6a, 0x18, 0x8b, 0x84, 0x0e, 0xaa, 0x62, 0xf2, 0xaa, 0x31,
  0x1e, 0xdc, 0x8a, 0x31, 0x30, 0x3b, 0x22, 0xec, 0x7c, 0x8b, 0x8c, 0xbd,
  0x4d, 0xe5, 0xb7, 0xb6, 0x68, 0xac, 0xaa, 0xff, 0x8e, 0x6e, 0x93, 0x14,
  0xa4, 0xef, 0x2b, 0x9f, 0x15, 0x4a, 0xdc, 0x79
};

static const uint8_t u_2048[] = { /* key component u, 128 bytes */
  0x5e, 0x42, 0x7f, 0x1d, 0x33, 0x81, 0x1e, 0xa4, 0x18, 0xdf, 0x86, 0xba,
  0xb0, 0x1b, 0x77, 0x56, 0xf4, 0x65, 0x91, 0x31, 0xd8, 0xac, 0xbc, 0x63,
  0x55, 0x55, 0x11, 0x5c, 0xc5, 0x31, 0x61, 0x08, 0xe0, 0xb3, 0x5c, 0xce,
  0x9e, 0x82, 0xbb, 0xc4, 0x7d, 0xd3, 0xc3, 0xc0, 0x95, 0x0b, 0xc0, 0xbf,
  0x7c, 0xaf, 0xcd, 0xa2, 0x1f, 0xbb, 0x8f, 0x7f, 0xce, 0xde, 0x42, 0x59,
  0xd5, 0x71, 0x49, 0xa2, 0x91, 0xe2, 0x24, 0xc2, 0xf7, 0x7f, 0xd2, 0xae,
  0x10, 0xbd, 0x34, 0xb6, 0xc4, 0xec, 0xa2, 0x17, 0xc8, 0x4f, 0x76, 0xf6,
  0x1d, 0x90, 0x72, 0x58, 0x55, 0x18, 0xbe, 0x44, 0xd4, 0xf1, 0x85, 0xf5,
  0x90, 0x65, 0x45, 0x4f, 0xf1, 0x3b, 0x65, 0xe7, 0x79, 0x3b, 0xe5, 0x4e,
  0x56, 0x28, 0x4b, 0x62, 0x4d, 0x8e, 0x1d, 0x25, 0x26, 0x37, 0x1a, 0xb5,
  0x5c, 0xd5, 0x14, 0x67, 0x73, 0x74, 0x70, 0x24
};

static const uint8_t m_2048[] = { /* message to be signed, 256 bytes */
  0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65,
  0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x04, 0x20, 0x8e, 0x36, 0xfc, 0x9a,
  0xa3, 0x17, 0x24, 0xc3, 0x24, 0x16, 0x26, 0x3c, 0x03, 0x66, 0xa1, 0x75,
  0xfa, 0xbb, 0xb9, 0x2b, 0x74, 0x1c, 0xa6, 0x49, 0x61, 0x07, 0x07, 0x4d,
  0x03, 0x43, 0xb5, 0x97
};

static const uint8_t s_2048[] = { /* signed message, 256 bytes */
  0xa4, 0xcf, 0x2b, 0x55, 0x74, 0x6e, 0x9a, 0x97, 0x4e, 0x50, 0x7a, 0x8c,
  0xbb, 0x32, 0x3d, 0x42, 0x4a, 0x14, 0x0d, 0x50, 0x29, 0xc8, 0x76, 0x2c,
  0xd9, 0x25, 0x16, 0x62, 0xee, 0xc7, 0xd7, 0xf9, 0x7f, 0xc5, 0x0c, 0x4b,
  0xa4, 0x6e, 0xd3, 0xe5, 0x0d, 0x01, 0x7c, 0xd7, 0x9e, 0xe2, 0x9f, 0xa0,
  0xf0, 0x51, 0x57, 0x4f, 0x9b, 0xf2, 0x89, 0x03, 0x04, 0xe7, 0xda, 0x19,
  0x05, 0xe7, 0xcb, 0xea, 0xaf, 0x84, 0xae, 0x21, 0x44, 0x6f, 0x85, 0xc4,
  0x71, 0x9b, 0x35, 0xed, 0xd8, 0x55, 0xd7, 0x25, 0xaa, 0xdb, 0xd8, 0x0f,
  0x24, 0xac, 0x3e, 0x3d, 0xcd, 0xa5, 0x72, 0xd9, 0x96, 0x75, 0x4b, 0x93,
  0xc4, 0x37, 0xef, 0x25, 0xe4, 0xa0, 0xda, 0x66, 0x51, 0x5e, 0xc2, 0xa9,
  0xcb, 0x4b, 0xde, 0xca, 0x70, 0x68, 0xd0, 0x9a, 0x76, 0x79, 0x86, 0x5f,
  0xab, 0xc0, 0x5d, 0x35, 0x10, 0x59, 0xa5, 0x4b, 0x17, 0x56, 0x68, 0xe2,
  0x24, 0x53, 0x3c, 0x73, 0x0f, 0x9d, 0x74, 0xeb, 0xb8, 0x9e, 0xb3, 0x18,
  0x8c, 0x20, 0x32, 0xf6, 0x28, 0x98, 0xe8, 0x6e, 0x95, 0xf5, 0x62, 0x2f,
  0x72, 0x13, 0x38, 0xe6, 0xd7, 0xaa, 0x46, 0x69, 0x07, 0xe8, 0x1e, 0x14,
  0xe3, 0x45, 0x03, 0x34, 0xa7, 0xde, 0xaf, 0xca, 0x42, 0x08, 0x22, 0xea,
  0x27, 0xe8, 0xaa, 0x49, 0xaf, 0x2f, 0xbe, 0xa6, 0x1f, 0xdc, 0x28, 0x7f,
  0x75, 0x3c, 0xfc, 0xe0, 0x80, 0x63, 0xf0, 0xd2, 0xd2, 0x93, 0x6b, 0x91,
  0xe1, 0x3b, 0x97, 0x50, 0xf4, 0x0f, 0xce, 0x73, 0xa2, 0x01, 0x7d, 0x97,
  0x84, 0x97, 0x61, 0xf5, 0x50, 0x66, 0x23, 0x1b, 0x94, 0x91, 0x67, 0x21,
  0xdc, 0x1a, 0xe0, 0x2a, 0x83, 0x91, 0x29, 0x64, 0x73, 0xb7, 0x2a, 0x0c,
  0x44, 0x48, 0x11, 0x36, 0x5f, 0xb3, 0x73, 0x1d, 0x43, 0xb6, 0xc3, 0x5e,
  0x9c, 0x63, 0x3c, 0x93
};

/* 4096-bit RSA private key (PKCS #8)
-----BEGIN PRIVATE KEY-----
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
kGtZAf6sJuZ46gk9R0vQHX5WXHQUIw==
-----END PRIVATE KEY-----
*/

static const uint8_t n_4096[] = { /* key component n, 512 bytes */
  0x97, 0xa1, 0xe3, 0xe1, 0xe2, 0xae, 0x76, 0x00, 0x33, 0x36, 0x0f, 0x89,
  0x27, 0x00, 0x42, 0x31, 0x07, 0x9c, 0xf9, 0xb0, 0xdb, 0x22, 0x60, 0x2a,
  0xab, 0x0a, 0xd3, 0xcd, 0x47, 0x79, 0x13, 0xcd, 0x0d, 0x2f, 0x9e, 0xa8,
  0x32, 0xfa, 0x4e, 0xcb, 0x41, 0xe5, 0xe3, 0xfe, 0x4e, 0xdf, 0x5a, 0x7b,
  0x22, 0x83, 0x6e, 0x97, 0x46, 0xdf, 0x21, 0xa7, 0x81, 0x15, 0x3b, 0x7a,
  0xd2, 0x65, 0xae, 0x1a, 0xff, 0x59, 0x36, 0x27, 0xe7, 0x6e, 0x60, 0x81,
  0x53, 0x7b, 0x60, 0xeb, 0x04, 0x25, 0x8d, 0x04, 0x3f, 0x42, 0x0e, 0xe2,
  0x10, 0x3a, 0xad, 0x0f, 0xf0, 0x89, 0xb4, 0x39, 0xd6, 0x09, 0x4b, 0x89,
  0x8a, 0x9d, 0x7b, 0xcd, 0xf1, 0xb6, 0x1e, 0xb7, 0xbd, 0x5f, 0xcb, 0xbc,
  0x99, 0x43, 0x35, 0x3d, 0x0a, 0x48, 0xd1, 0xe1, 0xc0, 0x1a, 0x38, 0xaf,
  0xce, 0x4d, 0x95, 0x50, 0x40, 0xa3, 0x24, 0x8c, 0xca, 0x06, 0x6a, 0x66,
  0xda, 0xea, 0x7c, 0x4f, 0x0d, 0x5a, 0x65, 0xf7, 0x5d, 0xdf, 0xa1, 0x04,
  0xdc, 0xd1, 0xf1, 0xfb, 0x76, 0xd5, 0xce, 0x84, 0x1f, 0xcb, 0xfc, 0xc2,
  0xaf, 0xae, 0x86, 0x8b, 0x6f, 0x05, 0x73, 0xfe, 0x6c, 0xd2, 0xe2, 0xe8,
  0xec, 0x9b, 0x36, 0x0c, 0xfe, 0xb9, 0x7e, 0x1d, 0x6e, 0x14, 0xa8, 0x0e,
  0x20, 0xb2, 0x52, 0xd9, 0xfd, 0x51, 0x70, 0x4e, 0xcd, 0xf4, 0x87, 0x74,
  0xe0, 0xd3, 0x6a, 0xcb, 0xee, 0xe8, 0x04, 0x64, 0x2f, 0x34, 0xde, 0x71,
  0x61, 0xac, 0xc6, 0x7c, 0x65, 0x31, 0x6f, 0xd8, 0xdc, 0x4a, 0x49, 0x43,
  0xa7, 0xec, 0x19, 0xf3, 0x73, 0x2a, 0x77, 0x78, 0xe3, 0xc9, 0x0a, 0xc4,
  0xea, 0x6e, 0x36, 0x10, 0x8e, 0x50, 0x4d, 0xad, 0xea, 0x70, 0x6f, 0xc3,
  0xff, 0x68, 0x70, 0x0b, 0x0a, 0x9b, 0x38, 0x7b, 0x43, 0x0d, 0xc1, 0x99,
  0xac, 0x64, 0xc4, 0xb8, 0x53, 0xb5, 0xc5, 0x28, 0x87, 0x74, 0x88, 0x0e,
  0xcc, 0x06, 0x98, 0xd2, 0xf5, 0xb8, 0x86, 0xb7, 0x73, 0xc0, 0x23, 0x4f,
  0x32, 0x3b, 0x74, 0xef, 0xde, 0x14, 0xc7, 0xeb, 0x18, 0x94, 0x9b, 0xc3,
  0xcb, 0xef, 0x00, 0xf4, 0x9b, 0x2f, 0x07, 0x12, 0xfc, 0x5d, 0x69, 0x9f,
  0x45, 0x98, 0x3c, 0x6a, 0xee, 0x60, 0xfb, 0xee, 0x8c, 0xac, 0x98, 0xba,
  0x40, 0x25, 0xa4, 0x80, 0x39, 0xf7, 0x83, 0x23, 0xbc, 0x19, 0x1e, 0x17,
  0xb5, 0x0d, 0x90, 0xc3, 0xa4, 0xac, 0xe5, 0x76, 0xd3, 0x7f, 0x75, 0x6c,
  0x54, 0x27, 0x77, 0xf9, 0x75, 0x96, 0xa2, 0x84, 0x45, 0x24, 0xb2, 0x40,
  0x31, 0x42, 0x63, 0x16, 0x8c, 0x99, 0xdf, 0x90, 0xae, 0x6f, 0xa6, 0x04,
  0x62, 0x1f, 0xdf, 0x37, 0xc9, 0xd2, 0x9d, 0x68, 0xa3, 0x7f, 0x63, 0x3c,
  0xce, 0x39, 0x53, 0xc4, 0x66, 0x50, 0xba, 0x47, 0x50, 0x71, 0x47, 0xcf,
  0xbe, 0xf4, 0x4a, 0x02, 0xf7, 0xd2, 0xb2, 0x24, 0x98, 0xe8, 0x94, 0x99,
  0xb4, 0x3b, 0x3f, 0xc9, 0x4f, 0x52, 0x46, 0x4a, 0x12, 0x99, 0x61, 0x5d,
  0xfd, 0xaf, 0xba, 0x56, 0x7a, 0x3e, 0x85, 0xca, 0x06, 0xac, 0x8a, 0xf2,
  0x85, 0x36, 0xe3, 0x10, 0x32, 0x8f, 0xe7, 0x2b, 0x07, 0xc7, 0xe9, 0xdf,
  0x46, 0xfc, 0x03, 0xf1, 0xce, 0x97, 0x79, 0x87, 0x3f, 0xd1, 0xf3, 0x8a,
  0x38, 0x38, 0x2f, 0xc1, 0xb7, 0x99, 0x91, 0xc3, 0xa9, 0xc8, 0x78, 0x6f,
  0xbe, 0xf5, 0x9d, 0x91, 0x53, 0x1b, 0x52, 0xc5, 0xa4, 0x85, 0x9b, 0x18,
  0x12, 0xd1, 0x35, 0xf0, 0xe6, 0x5e, 0x04, 0x95, 0x48, 0x22, 0xb1, 0x3e,
  0xaf, 0xa2, 0x6d, 0xa9, 0xa2, 0xeb, 0xb8, 0xd9, 0xa5, 0x24, 0x02, 0x30,
  0x4d, 0x59, 0x69, 0xa7, 0xed, 0xfc, 0xe3, 0x60, 0xb8, 0xc6, 0xf9, 0x2b,
  0x52, 0x1d, 0x96, 0x15, 0x1d, 0xc4, 0xc9, 0xc3
};

static const uint8_t e_4096[] = { /* key component e, 4 bytes */
  0x00, 0x01, 0x00, 0x01
};

static const uint8_t d_4096[] = { /* key component d, 512 bytes */
  0x27, 0x8f, 0x3a, 0xee, 0xd1, 0xbf, 0x06, 0x56, 0x23, 0x06, 0x35, 0xa3,
  0x68, 0xa3, 0x6e, 0xa1, 0x70, 0x05, 0x0a, 0x37, 0x93, 0xd4, 0x32, 0x16,
  0xaf, 0xad, 0x11, 0x78, 0xfa, 0xee, 0xa1, 0xb5, 0xdb, 0x7c, 0xd2, 0xfd,
  0xba, 0xdf, 0x06, 0xf3, 0x8c, 0x6b, 0xb7, 0xc1, 0xbf, 0x3e, 0x12, 0x53,
  0x11, 0xbc, 0x0c, 0x7c, 0x37, 0x27, 0x3b, 0x96, 0x81, 0xdc, 0xd2, 0x39,
  0xc6, 0xee, 0x74, 0x2f, 0xe2, 0xf2, 0x99, 0x68, 0x6b, 0xbe, 0xa6, 0x3a,
  0xd7, 0x56, 0xd7, 0x00, 0x39, 0x82, 0xba, 0x79, 0xa3, 0x2f, 0x4e, 0xc6,
  0xb7, 0xc9, 0x37, 0x21, 0x73, 0x75, 0xd9, 0xa9, 0x45, 0x28, 0x03, 0xa7,
  0x0c, 0x9c, 0xed, 0x91, 0xdb, 0x3f, 0xd2, 0x5f, 0xc9, 0x6e, 0x56, 0xaf,
  0x0b, 0xa5, 0x37, 0x1c, 0x87, 0xb4, 0x5b, 0xdd, 0x73, 0xca, 0xe3, 0x83,
  0x2a, 0x65, 0x9f, 0x50, 0xe2, 0xac, 0x2d, 0x7a, 0xf5, 0xb2, 0x1a, 0xcc,
  0x5e, 0xcc, 0xd2, 0x45, 0xa5, 0x8c, 0x32, 0x12, 0x09, 0x51, 0xb0, 0xa6,
  0x9e, 0x1d, 0xbf, 0xee, 0x05, 0x20, 0xde, 0xd2, 0x25, 0xa1, 0x88, 0x7e,
  0x1a, 0x6b, 0x83, 0xfa, 0x98, 0xaa, 0x69, 0x8a, 0xb5, 0x45, 0x87, 0xa1,
  0x91, 0x29, 0x25, 0x3e, 0xda, 0xad, 0xf6, 0x33, 0x23, 0x67, 0x0c, 0x39,
  0x33, 0x5a, 0x92, 0xb7, 0x00, 0x99, 0xe0, 0x9d, 0x0e, 0xaa, 0x7f, 0x34,
  0x84, 0xfb, 0x63, 0x5f, 0x75, 0x22, 0xdf, 0x12, 0x6c, 0x26, 0x74, 0xea,
  0x4b, 0xbb, 0x51, 0xc5, 0x5e, 0x79, 0x39, 0x5e, 0xf0, 0x8a, 0x08, 0xf7,
  0x37, 0xb6, 0x27, 0x47, 0x16, 0x82, 0xbb, 0xcc, 0xb4, 0x50, 0xdd, 0x18,
  0x66, 0xb8, 0xfe, 0x2d, 0xef, 0x93, 0x0f, 0xd1, 0x11, 0xda, 0xe7, 0xad,
  0xd0, 0xd2, 0xa4, 0x78, 0x9c, 0xf9, 0xc6, 0x10, 0x92, 0x7b, 0xe2, 0x48,
  0x7f, 0x6b, 0x82, 0xce, 0xd5, 0x55, 0xb4, 0x8b, 0xb2, 0x75, 0x74, 0x53,
  0x89, 0xad, 0xd9, 0x24, 0x77, 0xea, 0x61, 0xf2, 0x21, 0x54, 0xa7, 0x41,
  0x33, 0x6d, 0xa8, 0xa3, 0x5b, 0xd1, 0xb7, 0xd8, 0xe8, 0x96, 0x1f, 0x46,
  0x65, 0x01, 0x4b, 0x8b, 0x1a, 0x50, 0x72, 0x96, 0x4f, 0x6c, 0x60, 0xe5,
  0x91, 0x74, 0x5c, 0xc8, 0x97, 0x8d, 0x49, 0x69, 0x0b, 0xbf, 0xa6, 0xd4,
  0xcc, 0xe0, 0x1f, 0x1a, 0x30, 0x32, 0x3a, 0x9f, 0xe1, 0xbe, 0x5c, 0x75,
  0xee, 0xae, 0xb3, 0xcc, 0x33, 0xdb, 0x99, 0xca, 0x6b, 0xef, 0xbf, 0x99,
  0xaf, 0x47, 0x78, 0x25, 0x3d, 0xf8, 0xbe, 0x49, 0xdb, 0x34, 0x36, 0x00,
  0x0c, 0xec, 0xb8, 0x7c, 0x04, 0x14, 0x9b, 0xea, 0x5f, 0x82, 0xaf, 0x83,
  0xf8, 0x6e, 0x85, 0xa5, 0x75, 0xf1, 0x60, 0x68, 0x21, 0xc3, 0x3a, 0xca,
  0x1e, 0xbd, 0x07, 0x4d, 0x2d, 0x83, 0x24, 0x9c, 0xa9, 0xdc, 0x4d, 0xaf,
  0x95, 0x7f, 0xef, 0x1d, 0x1e, 0x50, 0xea, 0x08, 0xef, 0xd5, 0xf9, 0xb2,
  0x9e, 0xb9, 0xed, 0x97, 0x1e, 0xfd, 0x1b, 0x56, 0xcd, 0x67, 0xa0, 0x57,
  0x54, 0x5f, 0x1d, 0x43, 0x2b, 0xde, 0x6b, 0xc7, 0x29, 0xe9, 0x9d, 0x0a,
  0x84, 0xd4, 0x25, 0xb4, 0xf3, 0xb3, 0xdb, 0x1c, 0x98, 0xdc, 0x91, 0x49,
  0x16, 0xec, 0xc8, 0xfa, 0xa1, 0xb2, 0x03, 0xb6, 0xe5, 0x7a, 0xb4, 0x56,
  0xb5, 0xf5, 0x70, 0x4b, 0x75, 0x68, 0xb9, 0x6e, 0xea, 0x66, 0xc9, 0xe2,
  0x25, 0xc2, 0x4d, 0xe3, 0x14, 0xcc, 0xc1, 0xf9, 0xa0, 0xe0, 0x8e, 0x71,
  0xa0, 0xbf, 0x53, 0xbb, 0x2f, 0x60, 0x37, 0x76, 0xca, 0xfb, 0x55, 0x57,
  0x65, 0xbd, 0xda, 0xef, 0xf4, 0x65, 0xb2, 0xe9, 0x3c, 0x17, 0xa3, 0x55,
  0x4f, 0x5e, 0x8f, 0xd5, 0xef, 0xce, 0x1e, 0x64, 0x92, 0x8f, 0x4b, 0xde,
  0x7c, 0x8b, 0x89, 0x62, 0xb1, 0x60, 0xe2, 0x81
};

static const uint8_t p_4096[] = { /* key component p, 256 bytes */
  0xbd, 0x67, 0x35, 0x89, 0x0c, 0xdd, 0x2d, 0xae, 0xfa, 0xf4, 0xc3, 0xac,
  0xa0, 0xe7, 0x01, 0xe0, 0x3b, 0xb5, 0x3c, 0x7f, 0xe0, 0xe1, 0x80, 0x18,
  0x96, 0xce, 0x0d, 0x5f, 0xaf, 0x83, 0x14, 0x9c, 0xda, 0x50, 0xdd, 0x86,
  0xf4, 0x5f, 0x22, 0xd1, 0x5d, 0xdc, 0xc2, 0x36, 0x49, 0x8a, 0x88, 0xc9,
  0x0d, 0xf4, 0xc7, 0x01, 0x03, 0x2e, 0xca, 0x6c, 0xd8, 0x5f, 0xd2, 0x5c,
  0x9b, 0xfb, 0xa5, 0x0d, 0x3f, 0x26, 0xb0, 0x04, 0x07, 0x3a, 0xf5, 0x12,
  0xd5, 0x58, 0xd5, 0xe4, 0x46, 0x42, 0x1d, 0x69, 0x09, 0x6d, 0x05, 0x7f,
  0x37, 0x4a, 0x00, 0x04, 0x08, 0xab, 0xa4, 0x2e, 0xf6, 0x18, 0xe0, 0x06,
  0x10, 0x89, 0xa4, 0x83, 0x1d, 0x6e, 0x6e, 0x5f, 0x7b, 0x40, 0x3f, 0x9a,
  0xcf, 0x64, 0x7a, 0xc6, 0x43, 0xb9, 0x76, 0xda, 0xb7, 0x24, 0x55, 0xe4,
  0xd4, 0x5e, 0xb5, 0xd3, 0xf7, 0xe0, 0xae, 0x85, 0x7d, 0x83, 0x29, 0xb3,
  0x93, 0x1b, 0x9a, 0x8e, 0x5e, 0x79, 0x5b, 0xc2, 0x3b, 0x32, 0x5f, 0x4c,
  0x06, 0x84, 0xaa, 0x9c, 0x13, 0x6f, 0xb6, 0xad, 0xf3, 0x1e, 0x81, 0xd8,
  0x4a, 0x7d, 0xea, 0x23, 0x54, 0xa5, 0x67, 0x70, 0x4b, 0x58, 0xe6, 0x24,
  0x14, 0x31, 0x29, 0x52, 0xc6, 0xd9, 0x71, 0x87, 0xfb, 0x52, 0x8f, 0x34,
  0xc9, 0x0d, 0xa1, 0x10, 0x38, 0xbe, 0xcd, 0xf8, 0x0c, 0xf4, 0x5e, 0x20,
  0x20, 0xa4, 0xc7, 0xfb, 0xee, 0x92, 0x3f, 0xeb, 0x9d, 0x6f, 0x21, 0xd9,
  0xfb, 0x53, 0x79, 0xed, 0x9a, 0x51, 0xb0, 0xab, 0xed, 0x3d, 0x79, 0x99,
  0x89, 0x39, 0xc7, 0x33, 0x4c, 0x7e, 0x57, 0xfa, 0x55, 0x82, 0x54, 0x8a,
  0xe8, 0xa1, 0xe8, 0x81, 0xb7, 0x4d, 0x9a, 0xde, 0x35, 0x47, 0x5e, 0xbd,
  0xae, 0xae, 0x96, 0xc2, 0xdb, 0x3d, 0x39, 0xde, 0x7e, 0xfc, 0xd8, 0xcc,
  0x3f, 0xea, 0x8b, 0x63
};

static const uint8_t q_4096[] = { /* key component q, 256 bytes */
  0xcc, 0xf2, 0xcf, 0xaf, 0x2f, 0x5a, 0x22, 0x36, 0x67, 0x12, 0xce, 0xf9,
  0xef, 0xdc, 0x6b, 0xc4, 0xdf, 0x9a, 0x6b, 0x59, 0x43, 0xa7, 0x55, 0x56,
  0xa8, 0x5f, 0x32, 0xe2, 0x5d, 0x41, 0x33, 0xd6, 0x5b, 0x89, 0xb5, 0x2a,
  0x30, 0x06, 0xe3, 0x1b, 0x68, 0xbd, 0xad, 0x57, 0x0a, 0xd1, 0x44, 0xe1,
  0x9f, 0xe4, 0x99, 0xed, 0x6e, 0x0d, 0x24, 0xdd, 0xdd, 0x52, 0xb6, 0x67,
  0xc8, 0x51, 0xe3, 0x25, 0x9a, 0xd4, 0x17, 0xb6, 0x06, 0x17, 0x53, 0x26,
  0x78, 0x12, 0x4e, 0x8b, 0xe8, 0x73, 0x1a, 0x1f, 0xfe, 0xfa, 0xe5, 0xc1,
  0x54, 0xc2, 0x22, 0x98, 0xc4, 0xcf, 0xc1, 0xf9, 0x1c, 0x8b, 0xfa, 0xe4,
  0xb2, 0x50, 0x7e, 0x25, 0x24, 0x49, 0xd9, 0x3f, 0x63, 0x96, 0x51, 0x20,
  0xa7, 0x14, 0xa7, 0x81, 0xf8, 0x97, 0x97, 0x14, 0x5c, 0x25, 0xe1, 0x4d,
  0x7c, 0x70, 0xa7, 0x2c, 0xba, 0x80, 0x22, 0xc4, 0xf3, 0xdc, 0x8f, 0x4c,
  0xf2, 0x4b, 0x76, 0xe7, 0x70, 0xeb, 0xb5, 0xe2, 0x18, 0xd0, 0x28, 0x03,
  0x28, 0xf0, 0x30, 0x91, 0x54, 0x05, 0x41, 0xe5, 0x4d, 0x84, 0x87, 0x8b,
  0x22, 0xc3, 0x28, 0x9b, 0xcc, 0xd1, 0x29, 0xda, 0xe5, 0x2c, 0x32, 0x44,
  0x95, 0xc7, 0x5b, 0x77, 0xf3, 0x6a, 0x97, 0x0a, 0x2f, 0x18, 0xa4, 0xb0,
  0x67, 0x99, 0x46, 0xad, 0xcf, 0x24, 0xba, 0x2a, 0xbc, 0x04, 0x54, 0xe5,
  0x91, 0xbe, 0x37, 0x3c, 0x11, 0xf7, 0x8a, 0xa4, 0x2d, 0x6f, 0xca, 0x4d,
  0x16, 0x71, 0x6a, 0x02, 0xf7, 0xdf, 0xa9, 0x1c, 0x0e, 0x53, 0x51, 0x19,
  0xb8, 0x6c, 0x46, 0x61, 0x8e, 0x9c, 0x3a, 0x8f, 0xfa, 0x1a, 0x56, 0xa8,
  0xef, 0x16, 0x2b, 0x45, 0xc4, 0x70, 0xbf, 0xb4, 0x45, 0xf2, 0xbb, 0x67,
  0x4d, 0x96, 0xbb, 0xbb, 0x77, 0x7c, 0xc6, 0x4f, 0x7b, 0xce, 0xcf, 0x93,
  0xde, 0x11, 0x86, 0x21
};

static const uint8_t u_4096[] = { /* key component u, 256 bytes */
  0x54, 0x31, 0x57, 0xff, 0x2c, 0xac, 0x38, 0xe7, 0xef, 0xa6, 0x8e, 0x0f,
  0xba, 0xcd, 0x7f, 0xcb, 0x8a, 0x30, 0x4a, 0x98, 0xd9, 0xf2, 0xb8, 0x61,
  0x5e, 0x93, 0x8f, 0x99, 0xf4, 0xe8, 0x3e, 0xd8, 0x23, 0x6f, 0xab, 0xc0,
  0x64, 0x7d, 0x1a, 0xf1, 0x10, 0x8c, 0xd3, 0x3f, 0x3d, 0x2e, 0x0d, 0xa1,
  0x6c, 0xb7, 0x27, 0x9f, 0x87, 0x0c, 0x73, 0x3a, 0xe4, 0xb3, 0x03, 0x14,
  0xfd, 0x1a, 0x5e, 0xe9, 0x98, 0xde, 0xb0, 0x93, 0xd7, 0x36, 0x42, 0x7a,
  0xc4, 0xc4, 0x78, 0x78, 0x8c, 0x4d, 0x88, 0xc1, 0x5f, 0x6c, 0x6e, 0x05,
  0x65, 0xe9, 0x88, 0x04, 0xc4, 0x42, 0x3f, 0x02, 0x29, 0x79, 0xfe, 0x80,
  0xaa, 0x60, 0x5f, 0x7a, 0x20, 0xb5, 0x63, 0x71, 0x58, 0x0f, 0x37, 0xdf,
  0x0e, 0x94, 0x1b, 0xbb, 0x27, 0xb7, 0xcd, 0x03, 0xb6, 0x74, 0xd4, 0x2d,
  0xe4, 0xe1, 0xa3, 0x7a, 0xdc, 0x98, 0xeb, 0x31, 0x85, 0x6b, 0x0b, 0x0e,
  0x69, 0x1a, 0x5e, 0xfb, 0x45, 0x88, 0x23, 0x88, 0x83, 0x08, 0x1f, 0xe2,
  0xd2, 0x91, 0xfd, 0x12, 0xbc, 0x5d, 0x55, 0x9e, 0x4b, 0x1d, 0x7f, 0xb3,
  0xd3, 0xe9, 0x1b, 0x66, 0xdd, 0x37, 0x0d, 0x74, 0x0c, 0x42, 0xf2, 0xb3,
  0xd0, 0x04, 0xa9, 0x68, 0x41, 0x20, 0xe8, 0x4f, 0xfd, 0x92, 0xd3, 0xc0,
  0x24, 0xe7, 0x6d, 0x69, 0xd2, 0xe8, 0xc8, 0x08, 0x52, 0xd9, 0xfe, 0xcb,
  0x4b, 0x0c, 0x72, 0x56, 0x0a, 0x2a, 0xa3, 0x63, 0x00, 0xe6, 0xc5, 0xe1,
  0x91, 0x93, 0x21, 0x76, 0x2c, 0x14, 0xa4, 0xe3, 0xff, 0xf4, 0x45, 0xc0,
  0x1a, 0x0e, 0x94, 0xb3, 0x6d, 0x52, 0xe3, 0x88, 0x22, 0xaf, 0xa2, 0x85,
  0xa0, 0xfe, 0xdb, 0x2a, 0xfe, 0xa0, 0x4e, 0x9a, 0x2d, 0x1c, 0xbc, 0xe0,
  0xbe, 0x15, 0xaf, 0xec, 0xa8, 0xc9, 0x2d, 0x7a, 0x69, 0xd3, 0x3d, 0xac,
  0xa3, 0x92, 0x36, 0x0b
};

static const uint8_t m_4096[] = { /* message to be signed, 512 bytes */
  0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60,
  0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x04, 0x20,
  0x8e, 0x36, 0xfc, 0x9a, 0xa3, 0x17, 0x24, 0xc3, 0x24, 0x16, 0x26, 0x3c,
  0x03, 0x66, 0xa1, 0x75, 0xfa, 0xbb, 0xb9, 0x2b, 0x74, 0x1c, 0xa6, 0x49,
  0x61, 0x07, 0x07, 0x4d, 0x03, 0x43, 0xb5, 0x97
};

static const uint8_t s_4096[] = { /* signed message, 512 bytes */
  0x57, 0x1c, 0xea, 0xc6, 0xef, 0x58, 0x63, 0x7f, 0x9f, 0x61, 0xd7, 0x28,
  0x33, 0xb2, 0x06, 0x55, 0xf6, 0x19, 0x30, 0x04, 0x40, 0xbd, 0x8a, 0x1b,
  0x61, 0x21, 0x5f, 0xc2, 0x97, 0x38, 0xd4, 0x3e, 0x20, 0x92, 0x12, 0x58,
  0x40, 0xd9, 0x60, 0x6f, 0x52, 0x82, 0x00, 0x00, 0x44, 0x68, 0x29, 0xf5,
  0xcb, 0x00, 0xf2, 0xde, 0xc8, 0x49, 0xba, 0x47, 0xf3, 0x5c, 0xb7, 0x8d,
  0xfd, 0x5f, 0x67, 0x12, 0xb9, 0x76, 0xed, 0x24, 0x1f, 0x25, 0x04, 0x17,
  0x08, 0x45, 0xaa, 0x55, 0x0a, 0x9b, 0x5e, 0x88, 0x03, 0x95, 0x1a, 0x77,
  0x7b, 0xe0, 0xe2, 0xd8, 0xc2, 0xef, 0x53, 0x22, 0x66, 0x92, 0x73, 0x19,
  0xcf, 0x1a, 0x26, 0x98, 0x57, 0x2e, 0xbc, 0x04, 0x36, 0xab, 0x26, 0xe9,
  0x57, 0x1b, 0x5d, 0x3f, 0x49, 0x13, 0xf8, 0x53, 0x3d, 0x4f, 0xbe, 0x41,
  0x59, 0x68, 0xa2, 0x34, 0x4e, 0xc7, 0x9d, 0x14, 0x0d, 0xaf, 0xdf, 0x91,
  0xba, 0xf7, 0xe4, 0xce, 0x04, 0x12, 0x9b, 0x47, 0x17, 0x3d, 0xb4, 0xd3,
  0x76, 0x74, 0xdb, 0x34, 0x80, 0x91, 0x26, 0x56, 0x7f, 0x55, 0x30, 0x64,
  0x15, 0xa4, 0xc2, 0x20, 0x1a, 0x34, 0xde, 0x0a, 0x6b, 0x99, 0x6a, 0x92,
  0xf0, 0x40, 0x26, 0xe4, 0x77, 0x73, 0x60, 0x98, 0xa9, 0xb8, 0xbf, 0xc6,
  0xda, 0x68, 0xa4, 0xcb, 0xee, 0xae, 0x58, 0xf9, 0xa4, 0xb1, 0xfd, 0xb9,
  0xaa, 0xfd, 0xea, 0xd2, 0x29, 0xec, 0x30, 0xb0, 0x30, 0xc7, 0x8e, 0xdb,
  0x4b, 0x65, 0x59, 0x65, 0x11, 0xe5, 0xc2, 0xe8, 0xca, 0x43, 0x33, 0x32,
  0x14, 0x5c, 0x97, 0xf4, 0xc2, 0xe9, 0xde, 0xc9, 0xa9, 0x9e, 0x55, 0x51,
  0x0e, 0xf7, 0x93, 0xda, 0x95, 0xbb, 0xe5, 0xd0, 0xf6, 0xd9, 0x1b, 0x54,
  0x34, 0x26, 0x25, 0x3a, 0xeb, 0xbf, 0x80, 0x0a, 0x8d, 0x94, 0x9f, 0x42,
  0x82, 0xfe, 0x46, 0x33, 0xe8, 0x33, 0x2b, 0xe2, 0xf3, 0xb3, 0x62, 0x1f,
  0x95, 0xbf, 0x80, 0xf1, 0x55, 0xc1, 0x10, 0xaf, 0xe4, 0x9f, 0x45, 0x97,
  0xa7, 0x2e, 0xdc, 0xaf, 0xba, 0xe9, 0x0a, 0x35, 0x15, 0x53, 0xbb, 0x23,
  0xad, 0xa4, 0x1a, 0xc5, 0x3b, 0x70, 0xb0, 0xe8, 0xad, 0x55, 0xb8, 0xd7,
  0x92, 0x82, 0xf5, 0xb9, 0xbb, 0x4c, 0x86, 0xe3, 0x7e, 0xe4, 0x56, 0xde,
  0x32, 0xa2, 0xd7, 0x9d, 0x2e, 0x78, 0x02, 0x32, 0x1e, 0x3e, 0x2c, 0x8e,
  0x2c, 0xa3, 0xad, 0x67, 0x46, 0x68, 0xe7, 0x9e, 0x4b, 0x9b, 0x39, 0xa2,
  0xdc, 0x41, 0x15, 0x77, 0xb2, 0xf7, 0xb6, 0xbe, 0xd0, 0xac, 0x6d, 0x30,
  0xda, 0x2e, 0xa0, 0x2d, 0xac, 0x1f, 0x25, 0xd3, 0xf1, 0xaf, 0xed, 0x42,
  0xd2, 0x8f, 0x3c, 0x34, 0xda, 0xb0, 0xab, 0xbe, 0xf6, 0xbc, 0xb2, 0xd2,
  0x8c, 0x1c, 0x8b, 0x8e, 0x65, 0x4c, 0xbf, 0x35, 0x67, 0xe0, 0x4f, 0x14,
  0xf1, 0x43, 0xea, 0x41, 0xce, 0x45, 0xc0, 0xbd, 0x56, 0xe1, 0xd7, 0x39,
  0x82, 0x40, 0x68, 0xbc, 0x5e, 0x36, 0xed, 0x5a, 0x29, 0x1e, 0x97, 0x50,
  0x3a, 0x73, 0x16, 0x75, 0x30, 0x7b, 0xb1, 0x90, 0x68, 0x3d, 0xba, 0xb1,
  0x09, 0x90, 0x27, 0x7a, 0x0c, 0x7b, 0x25, 0x2d, 0xac, 0x66, 0xf5, 0x1e,
  0xca, 0xdb, 0xf1, 0x96, 0x39, 0xb2, 0xf3, 0xa4, 0x3d, 0x26, 0xa2, 0x27,
  0xa5, 0xab, 0xb2, 0x24, 0x34, 0xb0, 0xb5, 0xbf, 0xb7, 0xd1, 0x18, 0x4e,
  0x74, 0x7b, 0x85, 0xe8, 0xfb, 0x1e, 0x54, 0x36, 0xf9, 0x85, 0xd5, 0x74,
  0x47, 0xe9, 0xf7, 0x6a, 0x29, 0x65, 0xb4, 0x53, 0x9b, 0x5c, 0xd3, 0xae,
  0xbc, 0x9f, 0x06, 0x27, 0xce, 0xa5, 0xf5, 0x7b, 0xd3, 0x93, 0xda, 0x09,
  0x2d, 0xad, 0xa0, 0xca, 0xb7, 0xe8, 0xba, 0xf9, 0xa9, 0x6a, 0xe3, 0x2e,
  0xd6, 0xc6, 0x3d, 0xae, 0x07, 0x24, 0x5a, 0xd7
};

typedef struct { const uint8_t *val; size_t len; } rsa_tc_bn_t;
typedef struct { size_t size; rsa_tc_bn_t n, e, d, p, q, u, m, s; } rsa_tc_t;

static const rsa_tc_t rsa_tc[] = {
  { 1024,
    { n_1024, sizeof(n_1024) },
    { e_1024, sizeof(e_1024) },
    { d_1024, sizeof(d_1024) },
    { p_1024, sizeof(p_1024) },
    { q_1024, sizeof(q_1024) },
    { u_1024, sizeof(u_1024) },
    { m_1024, sizeof(m_1024) },
    { s_1024, sizeof(s_1024) }
  },
  { 2048,
    { n_2048, sizeof(n_2048) },
    { e_2048, sizeof(e_2048) },
    { d_2048, sizeof(d_2048) },
    { p_2048, sizeof(p_2048) },
    { q_2048, sizeof(q_2048) },
    { u_2048, sizeof(u_2048) },
    { m_2048, sizeof(m_2048) },
    { s_2048, sizeof(s_2048) }
  },
  { 4096,
    { n_4096, sizeof(n_4096) },
    { e_4096, sizeof(e_4096) },
    { d_4096, sizeof(d_4096) },
    { p_4096, sizeof(p_4096) },
    { q_4096, sizeof(q_4096) },
    { u_4096, sizeof(u_4096) },
    { m_4096, sizeof(m_4096) },
    { s_4096, sizeof(s_4096) }
  }
};
