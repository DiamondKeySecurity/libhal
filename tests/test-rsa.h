/*
 * RSA signature test data for Cryptech project, automatically generated by
 * test-rsa.py using PyCrypto version 2.6.1. Do not edit.
 *
 * Plaintext: "You can hack anything you want with TECO and DDT."
 * SHA-256: 8e36fc9aa31724c32416263c0366a175fabbb92b741ca6496107074d0343b597
 */

/* 1024-bit RSA private key (PKCS #8)
-----BEGIN PRIVATE KEY-----
MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBAM9bbEIr5Siz6UEE
H84ukARYDIcssB4nxuiKQ8vbfb8Ikt1o5MWQ3mZ7EgPg6KaUnq5n5hx8QtPHuAOi
HdC+YbXqr1ei61jkCUNmv9sTG61pMXnVGSm2IbOo6qLPNV/wB9jYycDMCodTBlMb
1sUvHr+60zikQygBqP7l66KSOAjFAgMBAAECgYBTemrK+QD4sfVlx1NGnlg8Z3Yj
tUnx2fGqDH/ewi6NidYWbPQs1XWzrDhEd3cyGQMJE6sALMZ6nBzo2YtHTl3nNOfU
UggVUfrXoDLaD9B2gQSWsdASo9INdeWhMvuvqpstdzUoOLCuwQw1+vNqEtYts56n
GsoygdPp+JQSb/howQJBANaCMc2e3sDvg9Vrx4CbYwKzpkeHXGaprjVEYPRo5ElE
NoJkpOSuBPBcDFN7MlZqeRe6yoADnjnD447Wld/1xMsCQQD3dxxEfU7hldoB72C0
FloQ1/MBeOtj6mzEqFyg7CCdz1q/AUqnUFPzP2Y6X0Ax981zUK4qmcMa45hYzxUK
VUavAkEAhqiChTcnVOzG0NJxEf35wLdwOdTyn4wDTXMYfjXeoVPN+Dsf/GJ1vUG7
hyh+aBs82zWqa4RZ7p9XGdMBkO9i0wJAPgr35FgCYd5/JQMOHLiJ5jUuMM1PPuK0
WG3Zo2LwHoCxQLgjLmWeVpsrlzDwWFbHhMTSlc2tM92iAYoRvWB58wJBAMoMTfsE
byoZgUGzccsq1qeNm0qMPfozT79WeCQBAn6Cd8SQ/jJlxBxm9Tf8qZ4ZQ0LteghV
SEDvFWBAZretHN0=
-----END PRIVATE KEY-----
*/

static const uint8_t n_1024[] = { /* key component n, 128 bytes */
  0xcf, 0x5b, 0x6c, 0x42, 0x2b, 0xe5, 0x28, 0xb3, 0xe9, 0x41, 0x04, 0x1f,
  0xce, 0x2e, 0x90, 0x04, 0x58, 0x0c, 0x87, 0x2c, 0xb0, 0x1e, 0x27, 0xc6,
  0xe8, 0x8a, 0x43, 0xcb, 0xdb, 0x7d, 0xbf, 0x08, 0x92, 0xdd, 0x68, 0xe4,
  0xc5, 0x90, 0xde, 0x66, 0x7b, 0x12, 0x03, 0xe0, 0xe8, 0xa6, 0x94, 0x9e,
  0xae, 0x67, 0xe6, 0x1c, 0x7c, 0x42, 0xd3, 0xc7, 0xb8, 0x03, 0xa2, 0x1d,
  0xd0, 0xbe, 0x61, 0xb5, 0xea, 0xaf, 0x57, 0xa2, 0xeb, 0x58, 0xe4, 0x09,
  0x43, 0x66, 0xbf, 0xdb, 0x13, 0x1b, 0xad, 0x69, 0x31, 0x79, 0xd5, 0x19,
  0x29, 0xb6, 0x21, 0xb3, 0xa8, 0xea, 0xa2, 0xcf, 0x35, 0x5f, 0xf0, 0x07,
  0xd8, 0xd8, 0xc9, 0xc0, 0xcc, 0x0a, 0x87, 0x53, 0x06, 0x53, 0x1b, 0xd6,
  0xc5, 0x2f, 0x1e, 0xbf, 0xba, 0xd3, 0x38, 0xa4, 0x43, 0x28, 0x01, 0xa8,
  0xfe, 0xe5, 0xeb, 0xa2, 0x92, 0x38, 0x08, 0xc5
};

static const uint8_t e_1024[] = { /* key component e, 4 bytes */
  0x00, 0x01, 0x00, 0x01
};

static const uint8_t d_1024[] = { /* key component d, 128 bytes */
  0x53, 0x7a, 0x6a, 0xca, 0xf9, 0x00, 0xf8, 0xb1, 0xf5, 0x65, 0xc7, 0x53,
  0x46, 0x9e, 0x58, 0x3c, 0x67, 0x76, 0x23, 0xb5, 0x49, 0xf1, 0xd9, 0xf1,
  0xaa, 0x0c, 0x7f, 0xde, 0xc2, 0x2e, 0x8d, 0x89, 0xd6, 0x16, 0x6c, 0xf4,
  0x2c, 0xd5, 0x75, 0xb3, 0xac, 0x38, 0x44, 0x77, 0x77, 0x32, 0x19, 0x03,
  0x09, 0x13, 0xab, 0x00, 0x2c, 0xc6, 0x7a, 0x9c, 0x1c, 0xe8, 0xd9, 0x8b,
  0x47, 0x4e, 0x5d, 0xe7, 0x34, 0xe7, 0xd4, 0x52, 0x08, 0x15, 0x51, 0xfa,
  0xd7, 0xa0, 0x32, 0xda, 0x0f, 0xd0, 0x76, 0x81, 0x04, 0x96, 0xb1, 0xd0,
  0x12, 0xa3, 0xd2, 0x0d, 0x75, 0xe5, 0xa1, 0x32, 0xfb, 0xaf, 0xaa, 0x9b,
  0x2d, 0x77, 0x35, 0x28, 0x38, 0xb0, 0xae, 0xc1, 0x0c, 0x35, 0xfa, 0xf3,
  0x6a, 0x12, 0xd6, 0x2d, 0xb3, 0x9e, 0xa7, 0x1a, 0xca, 0x32, 0x81, 0xd3,
  0xe9, 0xf8, 0x94, 0x12, 0x6f, 0xf8, 0x68, 0xc1
};

static const uint8_t p_1024[] = { /* key component p, 64 bytes */
  0xd6, 0x82, 0x31, 0xcd, 0x9e, 0xde, 0xc0, 0xef, 0x83, 0xd5, 0x6b, 0xc7,
  0x80, 0x9b, 0x63, 0x02, 0xb3, 0xa6, 0x47, 0x87, 0x5c, 0x66, 0xa9, 0xae,
  0x35, 0x44, 0x60, 0xf4, 0x68, 0xe4, 0x49, 0x44, 0x36, 0x82, 0x64, 0xa4,
  0xe4, 0xae, 0x04, 0xf0, 0x5c, 0x0c, 0x53, 0x7b, 0x32, 0x56, 0x6a, 0x79,
  0x17, 0xba, 0xca, 0x80, 0x03, 0x9e, 0x39, 0xc3, 0xe3, 0x8e, 0xd6, 0x95,
  0xdf, 0xf5, 0xc4, 0xcb
};

static const uint8_t q_1024[] = { /* key component q, 64 bytes */
  0xf7, 0x77, 0x1c, 0x44, 0x7d, 0x4e, 0xe1, 0x95, 0xda, 0x01, 0xef, 0x60,
  0xb4, 0x16, 0x5a, 0x10, 0xd7, 0xf3, 0x01, 0x78, 0xeb, 0x63, 0xea, 0x6c,
  0xc4, 0xa8, 0x5c, 0xa0, 0xec, 0x20, 0x9d, 0xcf, 0x5a, 0xbf, 0x01, 0x4a,
  0xa7, 0x50, 0x53, 0xf3, 0x3f, 0x66, 0x3a, 0x5f, 0x40, 0x31, 0xf7, 0xcd,
  0x73, 0x50, 0xae, 0x2a, 0x99, 0xc3, 0x1a, 0xe3, 0x98, 0x58, 0xcf, 0x15,
  0x0a, 0x55, 0x46, 0xaf
};

static const uint8_t u_1024[] = { /* key component u, 64 bytes */
  0x0e, 0x5f, 0xfa, 0x8f, 0xc2, 0x63, 0x09, 0xa1, 0x88, 0xd8, 0xd7, 0x75,
  0x34, 0xa9, 0x21, 0xee, 0xab, 0xd9, 0xe2, 0x59, 0x17, 0xe4, 0x47, 0xd8,
  0xa0, 0x7e, 0x71, 0x6e, 0x8a, 0x47, 0x4e, 0x49, 0xe8, 0x16, 0x3a, 0x0e,
  0xdb, 0x24, 0xbb, 0x35, 0x6a, 0x69, 0xef, 0xa2, 0x50, 0x84, 0x1e, 0x8f,
  0xbb, 0xec, 0xdb, 0xec, 0x94, 0x94, 0x58, 0xc0, 0xe4, 0x2a, 0xa8, 0x24,
  0x8b, 0x15, 0xdb, 0xb9
};

static const uint8_t m_1024[] = { /* message to be signed, 128 bytes */
  0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60,
  0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x04, 0x20,
  0x8e, 0x36, 0xfc, 0x9a, 0xa3, 0x17, 0x24, 0xc3, 0x24, 0x16, 0x26, 0x3c,
  0x03, 0x66, 0xa1, 0x75, 0xfa, 0xbb, 0xb9, 0x2b, 0x74, 0x1c, 0xa6, 0x49,
  0x61, 0x07, 0x07, 0x4d, 0x03, 0x43, 0xb5, 0x97
};

static const uint8_t s_1024[] = { /* signed message, 128 bytes */
  0xbf, 0x03, 0xe7, 0x1a, 0x8f, 0x16, 0xe5, 0xad, 0xe8, 0x1b, 0xcc, 0xcf,
  0x9f, 0x3a, 0x4f, 0xc6, 0xd4, 0x14, 0xca, 0xae, 0x37, 0x9b, 0xc4, 0x4b,
  0x40, 0x13, 0xbf, 0x94, 0x9a, 0xea, 0xc1, 0x6c, 0x6c, 0x1a, 0xad, 0xeb,
  0xa2, 0x8e, 0xd7, 0xd6, 0xe8, 0x19, 0xfb, 0xf5, 0xd3, 0xe4, 0xdd, 0xd0,
  0xa5, 0xd4, 0x41, 0x44, 0xb6, 0xda, 0xff, 0x9b, 0x42, 0x19, 0xf7, 0x30,
  0x0e, 0x2e, 0x0e, 0x31, 0x6a, 0xf0, 0xc2, 0xfc, 0xa0, 0x8f, 0x23, 0x17,
  0xc2, 0x69, 0xf2, 0xe7, 0x11, 0x33, 0x8f, 0x37, 0x14, 0x5f, 0xdf, 0xb0,
  0x54, 0xdc, 0x36, 0x77, 0xc3, 0xc9, 0x64, 0x2a, 0x87, 0xd0, 0xa7, 0x78,
  0xd5, 0x5b, 0xdf, 0xd2, 0x68, 0x96, 0xaa, 0xb2, 0x6b, 0xfb, 0x99, 0x20,
  0x82, 0xa6, 0xfb, 0xcd, 0x03, 0x1a, 0xf3, 0x60, 0xc1, 0x5b, 0x5e, 0x92,
  0x57, 0xc6, 0x08, 0x92, 0x74, 0x40, 0x62, 0x6c
};

/* 2048-bit RSA private key (PKCS #8)
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCcvEpsSs0CKPeQ
fsLHD1D/uPkzHNKNis4K79saXJw5MTqobxWd8gwfD4DtDsDAMneuXbqdUxldo6w7
b4FQ7BTe0Prw0KKbplArP4hxS+ncG490ftZMVooeyY1aL5pdq5BnqyJiaCCmWlXU
/swsJIhOgx2zYZszJZSMlggR6tKQunID/uwLnUBOWdJTQDFQUfMCy+u3qfCl3ate
a5ODOpqOaqPIEC3OcD1cBVteKG1H629i8PyteLaJwx7BD2XV7jpV4+qNf6ywUx/f
zTeEIwcUZg/X+iR6wLAbITGz7k7pcRx/k2yRR/9+yg3VFEGt4Tr4yGTUGSDK+ZR9
/woz2nE7AgMBAAECggEAcuXJPQe8r8eubDuwt9Jvk3dbH3ASnfZSQ0w/91xKndaL
5KvCUg39esuXvLBi9sJIYAeP5QLlBnMUsGF2kAbw6cKTIvQfMDFEdd/WOw/meRev
GzxcBowuJpGkUKey5tX9PzICO9ePj8OLRmAe9oE1dzDBFh4Icv8qncDiW5gkEjmk
ydd8N4Sa5PymquHAR8Mzo3CA9fb2aJELOEoB9w2S2RCa37Ak7NK51Nhuh/DleQqE
j3ORoEbjzTq+GLG8eKFQkwClqQ450pt1+Har8maRDHuoF1gUq0vK+JvFsMHtxn4l
jJA/PxWj209Ym77+CzPEF4n+v70qNR03D+UN55Vv4QKBgQC3iCUx2RE2AD1ebwkz
DVRNKNeQvfIJXMPeRCwQ3N2f1sjV9x7xMxPNcx7SVuhoj4HrBzb3SwpgHbX9Qf/8
4TqSHS8F2bTwanW42axYJ60IJBug0HfRbdcFYz2Hh4tM5KHWon9BWy+4XuWJKtBZ
9Dkorpies3c5Y7M2cWrtOtLxkQKBgQDan4H8qRplVyU9yE01BUMf87DRrsBTb78V
Zg5pYaofF4yN0u4Gk1Ea6ouvx+xWJti8oiXwoBBPNOG+dRdizgSAPVi7fikcNuqu
9xkz2FjiL3p3taU/awM+FpGLcjK/5ldkB7VWYawikMsIO2l6XF7ViubJgHpKrEnC
v2eHuiEQCwKBgDQGwhR5Zimas8rbSw5Pzv/4ffMoBT6mL1gIlz1IfwLajiApZ3oU
cp6g7bHOtR8+3yNS7j/3478PbRGX7gsvhbz5zOSprGMiqrB19CchSCmwoqxZrD2Q
F44NbdnHkLOBdGc1tUE/qi1nqUXS/zEgzDs+E0GZukhofNsIF7mcHUQhAoGBALD3
0Ubus7k4s6KxUx4KJm3k20rAhFqF6E2wERZowkbszw+2oIqeEVcSaQRfdwW96E+5
ibCgQNN84QdEzStjzOzpu7v5wdle8tWym6oGBN0CxcXFOgB95WAK8MHKLR59nFwS
iU1lPuuz/UWqohU0VGfTSkHuSA/OKt8EBRAvMLhFAoGAdMNlyleBbjleJ2tc3C53
51SquntS88Y/Owfx6uuyxhXaVkE2XdCl/BemooizyF0WdVtMhff2jlVMdsAbDqOd
rVYdgfOHjEhpMa3Z1afzlAC06RLsl+gN2B76Mv/mnv0izdS4T/AcUfuUvPstyw++
AeFZS9WhiXZXniFPQpskWic=
-----END PRIVATE KEY-----
*/

static const uint8_t n_2048[] = { /* key component n, 256 bytes */
  0x9c, 0xbc, 0x4a, 0x6c, 0x4a, 0xcd, 0x02, 0x28, 0xf7, 0x90, 0x7e, 0xc2,
  0xc7, 0x0f, 0x50, 0xff, 0xb8, 0xf9, 0x33, 0x1c, 0xd2, 0x8d, 0x8a, 0xce,
  0x0a, 0xef, 0xdb, 0x1a, 0x5c, 0x9c, 0x39, 0x31, 0x3a, 0xa8, 0x6f, 0x15,
  0x9d, 0xf2, 0x0c, 0x1f, 0x0f, 0x80, 0xed, 0x0e, 0xc0, 0xc0, 0x32, 0x77,
  0xae, 0x5d, 0xba, 0x9d, 0x53, 0x19, 0x5d, 0xa3, 0xac, 0x3b, 0x6f, 0x81,
  0x50, 0xec, 0x14, 0xde, 0xd0, 0xfa, 0xf0, 0xd0, 0xa2, 0x9b, 0xa6, 0x50,
  0x2b, 0x3f, 0x88, 0x71, 0x4b, 0xe9, 0xdc, 0x1b, 0x8f, 0x74, 0x7e, 0xd6,
  0x4c, 0x56, 0x8a, 0x1e, 0xc9, 0x8d, 0x5a, 0x2f, 0x9a, 0x5d, 0xab, 0x90,
  0x67, 0xab, 0x22, 0x62, 0x68, 0x20, 0xa6, 0x5a, 0x55, 0xd4, 0xfe, 0xcc,
  0x2c, 0x24, 0x88, 0x4e, 0x83, 0x1d, 0xb3, 0x61, 0x9b, 0x33, 0x25, 0x94,
  0x8c, 0x96, 0x08, 0x11, 0xea, 0xd2, 0x90, 0xba, 0x72, 0x03, 0xfe, 0xec,
  0x0b, 0x9d, 0x40, 0x4e, 0x59, 0xd2, 0x53, 0x40, 0x31, 0x50, 0x51, 0xf3,
  0x02, 0xcb, 0xeb, 0xb7, 0xa9, 0xf0, 0xa5, 0xdd, 0xab, 0x5e, 0x6b, 0x93,
  0x83, 0x3a, 0x9a, 0x8e, 0x6a, 0xa3, 0xc8, 0x10, 0x2d, 0xce, 0x70, 0x3d,
  0x5c, 0x05, 0x5b, 0x5e, 0x28, 0x6d, 0x47, 0xeb, 0x6f, 0x62, 0xf0, 0xfc,
  0xad, 0x78, 0xb6, 0x89, 0xc3, 0x1e, 0xc1, 0x0f, 0x65, 0xd5, 0xee, 0x3a,
  0x55, 0xe3, 0xea, 0x8d, 0x7f, 0xac, 0xb0, 0x53, 0x1f, 0xdf, 0xcd, 0x37,
  0x84, 0x23, 0x07, 0x14, 0x66, 0x0f, 0xd7, 0xfa, 0x24, 0x7a, 0xc0, 0xb0,
  0x1b, 0x21, 0x31, 0xb3, 0xee, 0x4e, 0xe9, 0x71, 0x1c, 0x7f, 0x93, 0x6c,
  0x91, 0x47, 0xff, 0x7e, 0xca, 0x0d, 0xd5, 0x14, 0x41, 0xad, 0xe1, 0x3a,
  0xf8, 0xc8, 0x64, 0xd4, 0x19, 0x20, 0xca, 0xf9, 0x94, 0x7d, 0xff, 0x0a,
  0x33, 0xda, 0x71, 0x3b
};

static const uint8_t e_2048[] = { /* key component e, 4 bytes */
  0x00, 0x01, 0x00, 0x01
};

static const uint8_t d_2048[] = { /* key component d, 256 bytes */
  0x72, 0xe5, 0xc9, 0x3d, 0x07, 0xbc, 0xaf, 0xc7, 0xae, 0x6c, 0x3b, 0xb0,
  0xb7, 0xd2, 0x6f, 0x93, 0x77, 0x5b, 0x1f, 0x70, 0x12, 0x9d, 0xf6, 0x52,
  0x43, 0x4c, 0x3f, 0xf7, 0x5c, 0x4a, 0x9d, 0xd6, 0x8b, 0xe4, 0xab, 0xc2,
  0x52, 0x0d, 0xfd, 0x7a, 0xcb, 0x97, 0xbc, 0xb0, 0x62, 0xf6, 0xc2, 0x48,
  0x60, 0x07, 0x8f, 0xe5, 0x02, 0xe5, 0x06, 0x73, 0x14, 0xb0, 0x61, 0x76,
  0x90, 0x06, 0xf0, 0xe9, 0xc2, 0x93, 0x22, 0xf4, 0x1f, 0x30, 0x31, 0x44,
  0x75, 0xdf, 0xd6, 0x3b, 0x0f, 0xe6, 0x79, 0x17, 0xaf, 0x1b, 0x3c, 0x5c,
  0x06, 0x8c, 0x2e, 0x26, 0x91, 0xa4, 0x50, 0xa7, 0xb2, 0xe6, 0xd5, 0xfd,
  0x3f, 0x32, 0x02, 0x3b, 0xd7, 0x8f, 0x8f, 0xc3, 0x8b, 0x46, 0x60, 0x1e,
  0xf6, 0x81, 0x35, 0x77, 0x30, 0xc1, 0x16, 0x1e, 0x08, 0x72, 0xff, 0x2a,
  0x9d, 0xc0, 0xe2, 0x5b, 0x98, 0x24, 0x12, 0x39, 0xa4, 0xc9, 0xd7, 0x7c,
  0x37, 0x84, 0x9a, 0xe4, 0xfc, 0xa6, 0xaa, 0xe1, 0xc0, 0x47, 0xc3, 0x33,
  0xa3, 0x70, 0x80, 0xf5, 0xf6, 0xf6, 0x68, 0x91, 0x0b, 0x38, 0x4a, 0x01,
  0xf7, 0x0d, 0x92, 0xd9, 0x10, 0x9a, 0xdf, 0xb0, 0x24, 0xec, 0xd2, 0xb9,
  0xd4, 0xd8, 0x6e, 0x87, 0xf0, 0xe5, 0x79, 0x0a, 0x84, 0x8f, 0x73, 0x91,
  0xa0, 0x46, 0xe3, 0xcd, 0x3a, 0xbe, 0x18, 0xb1, 0xbc, 0x78, 0xa1, 0x50,
  0x93, 0x00, 0xa5, 0xa9, 0x0e, 0x39, 0xd2, 0x9b, 0x75, 0xf8, 0x76, 0xab,
  0xf2, 0x66, 0x91, 0x0c, 0x7b, 0xa8, 0x17, 0x58, 0x14, 0xab, 0x4b, 0xca,
  0xf8, 0x9b, 0xc5, 0xb0, 0xc1, 0xed, 0xc6, 0x7e, 0x25, 0x8c, 0x90, 0x3f,
  0x3f, 0x15, 0xa3, 0xdb, 0x4f, 0x58, 0x9b, 0xbe, 0xfe, 0x0b, 0x33, 0xc4,
  0x17, 0x89, 0xfe, 0xbf, 0xbd, 0x2a, 0x35, 0x1d, 0x37, 0x0f, 0xe5, 0x0d,
  0xe7, 0x95, 0x6f, 0xe1
};

static const uint8_t p_2048[] = { /* key component p, 128 bytes */
  0xb7, 0x88, 0x25, 0x31, 0xd9, 0x11, 0x36, 0x00, 0x3d, 0x5e, 0x6f, 0x09,
  0x33, 0x0d, 0x54, 0x4d, 0x28, 0xd7, 0x90, 0xbd, 0xf2, 0x09, 0x5c, 0xc3,
  0xde, 0x44, 0x2c, 0x10, 0xdc, 0xdd, 0x9f, 0xd6, 0xc8, 0xd5, 0xf7, 0x1e,
  0xf1, 0x33, 0x13, 0xcd, 0x73, 0x1e, 0xd2, 0x56, 0xe8, 0x68, 0x8f, 0x81,
  0xeb, 0x07, 0x36, 0xf7, 0x4b, 0x0a, 0x60, 0x1d, 0xb5, 0xfd, 0x41, 0xff,
  0xfc, 0xe1, 0x3a, 0x92, 0x1d, 0x2f, 0x05, 0xd9, 0xb4, 0xf0, 0x6a, 0x75,
  0xb8, 0xd9, 0xac, 0x58, 0x27, 0xad, 0x08, 0x24, 0x1b, 0xa0, 0xd0, 0x77,
  0xd1, 0x6d, 0xd7, 0x05, 0x63, 0x3d, 0x87, 0x87, 0x8b, 0x4c, 0xe4, 0xa1,
  0xd6, 0xa2, 0x7f, 0x41, 0x5b, 0x2f, 0xb8, 0x5e, 0xe5, 0x89, 0x2a, 0xd0,
  0x59, 0xf4, 0x39, 0x28, 0xae, 0x98, 0x9e, 0xb3, 0x77, 0x39, 0x63, 0xb3,
  0x36, 0x71, 0x6a, 0xed, 0x3a, 0xd2, 0xf1, 0x91
};

static const uint8_t q_2048[] = { /* key component q, 128 bytes */
  0xda, 0x9f, 0x81, 0xfc, 0xa9, 0x1a, 0x65, 0x57, 0x25, 0x3d, 0xc8, 0x4d,
  0x35, 0x05, 0x43, 0x1f, 0xf3, 0xb0, 0xd1, 0xae, 0xc0, 0x53, 0x6f, 0xbf,
  0x15, 0x66, 0x0e, 0x69, 0x61, 0xaa, 0x1f, 0x17, 0x8c, 0x8d, 0xd2, 0xee,
  0x06, 0x93, 0x51, 0x1a, 0xea, 0x8b, 0xaf, 0xc7, 0xec, 0x56, 0x26, 0xd8,
  0xbc, 0xa2, 0x25, 0xf0, 0xa0, 0x10, 0x4f, 0x34, 0xe1, 0xbe, 0x75, 0x17,
  0x62, 0xce, 0x04, 0x80, 0x3d, 0x58, 0xbb, 0x7e, 0x29, 0x1c, 0x36, 0xea,
  0xae, 0xf7, 0x19, 0x33, 0xd8, 0x58, 0xe2, 0x2f, 0x7a, 0x77, 0xb5, 0xa5,
  0x3f, 0x6b, 0x03, 0x3e, 0x16, 0x91, 0x8b, 0x72, 0x32, 0xbf, 0xe6, 0x57,
  0x64, 0x07, 0xb5, 0x56, 0x61, 0xac, 0x22, 0x90, 0xcb, 0x08, 0x3b, 0x69,
  0x7a, 0x5c, 0x5e, 0xd5, 0x8a, 0xe6, 0xc9, 0x80, 0x7a, 0x4a, 0xac, 0x49,
  0xc2, 0xbf, 0x67, 0x87, 0xba, 0x21, 0x10, 0x0b
};

static const uint8_t u_2048[] = { /* key component u, 128 bytes */
  0x4f, 0x88, 0xe0, 0xf9, 0x63, 0x9b, 0x12, 0x96, 0xf3, 0x37, 0x79, 0xed,
  0x77, 0x1f, 0xe1, 0xcd, 0x54, 0x57, 0x20, 0xf4, 0xae, 0xc2, 0x88, 0x35,
  0x78, 0x97, 0x96, 0xb8, 0xb4, 0xb4, 0xc5, 0xb8, 0x18, 0x38, 0x65, 0x78,
  0x1e, 0x68, 0xbf, 0xce, 0xf8, 0x28, 0x61, 0x4f, 0xfe, 0x46, 0x84, 0x4e,
  0xbb, 0x8d, 0x32, 0x4e, 0x1f, 0xf8, 0x34, 0x90, 0x3d, 0x99, 0x81, 0xce,
  0x7b, 0x60, 0x83, 0x00, 0x42, 0x54, 0x89, 0x3b, 0x3c, 0x7a, 0x72, 0x69,
  0x10, 0xd2, 0xc9, 0x87, 0x28, 0xb9, 0xce, 0x2e, 0x3f, 0xd0, 0x98, 0xda,
  0x0a, 0x6b, 0xf9, 0xef, 0x66, 0xc9, 0x51, 0x46, 0x8a, 0xdc, 0xdf, 0x56,
  0x68, 0xfb, 0x39, 0x3f, 0xa5, 0x36, 0x44, 0x11, 0x57, 0x7b, 0x4e, 0xc3,
  0x3a, 0x64, 0x30, 0xb8, 0xde, 0xf5, 0x14, 0x7e, 0xab, 0xca, 0xa6, 0x27,
  0x52, 0x7f, 0x63, 0x8b, 0xa2, 0xb7, 0x51, 0x1f
};

static const uint8_t m_2048[] = { /* message to be signed, 256 bytes */
  0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65,
  0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x04, 0x20, 0x8e, 0x36, 0xfc, 0x9a,
  0xa3, 0x17, 0x24, 0xc3, 0x24, 0x16, 0x26, 0x3c, 0x03, 0x66, 0xa1, 0x75,
  0xfa, 0xbb, 0xb9, 0x2b, 0x74, 0x1c, 0xa6, 0x49, 0x61, 0x07, 0x07, 0x4d,
  0x03, 0x43, 0xb5, 0x97
};

static const uint8_t s_2048[] = { /* signed message, 256 bytes */
  0x38, 0xcd, 0x57, 0x72, 0x74, 0x5a, 0x7c, 0xa1, 0x1b, 0x1d, 0xf6, 0xda,
  0x12, 0xbd, 0x9c, 0x9e, 0xd7, 0xfd, 0x84, 0x48, 0xfd, 0x7c, 0x6c, 0xc4,
  0xd0, 0x96, 0x97, 0x67, 0xef, 0x3a, 0xb2, 0x70, 0x03, 0x97, 0xa8, 0x6b,
  0x6e, 0x87, 0xd4, 0x85, 0x5c, 0x30, 0x0a, 0xa4, 0x48, 0x19, 0xb1, 0x5c,
  0xbd, 0xf6, 0x53, 0xaa, 0xa9, 0x2a, 0x95, 0xa9, 0xe2, 0x0d, 0x25, 0x44,
  0x16, 0x99, 0xb7, 0x9b, 0x6d, 0x14, 0x17, 0x47, 0xf7, 0xf8, 0x66, 0x4f,
  0x4f, 0xd7, 0x15, 0x89, 0xc8, 0x76, 0xb0, 0x32, 0x5d, 0x8e, 0x28, 0x3c,
  0x76, 0x1e, 0x64, 0xbb, 0x66, 0xb8, 0x0b, 0x28, 0x06, 0x83, 0xb1, 0x77,
  0xbf, 0x3d, 0x9e, 0xae, 0xdf, 0xa1, 0xc0, 0x87, 0xef, 0x7c, 0x2f, 0xae,
  0x3b, 0x14, 0x8d, 0x6d, 0xa1, 0x0b, 0x52, 0xed, 0xd2, 0x40, 0xfa, 0x8c,
  0x3b, 0x04, 0x00, 0x47, 0xdf, 0x7d, 0x74, 0xba, 0x47, 0x4b, 0x1b, 0x1d,
  0x55, 0xbd, 0x37, 0x8b, 0x05, 0x2e, 0x58, 0x21, 0x97, 0x96, 0xf3, 0xfc,
  0xf0, 0x09, 0xbb, 0xe5, 0xc8, 0x32, 0x6e, 0xdc, 0x9c, 0x3b, 0xfa, 0xdc,
  0x8e, 0x75, 0xc5, 0x19, 0xe7, 0xf8, 0x2f, 0xa6, 0x74, 0x63, 0x1e, 0xf7,
  0xe5, 0x72, 0x89, 0xe8, 0x3f, 0x3f, 0x19, 0xac, 0x64, 0xf8, 0xc6, 0xa3,
  0x91, 0xe2, 0x68, 0x44, 0xbe, 0x93, 0x65, 0xa8, 0x92, 0xcb, 0xa1, 0x01,
  0x8f, 0xad, 0xb9, 0xf8, 0xfc, 0xfd, 0x94, 0xe5, 0xa4, 0x72, 0x4c, 0x52,
  0x80, 0x5e, 0x00, 0xa0, 0x76, 0x0b, 0x6d, 0xe1, 0x58, 0xb1, 0x39, 0x53,
  0x1b, 0x1d, 0xa0, 0xe4, 0x1a, 0x15, 0x8e, 0xf8, 0x11, 0xbc, 0xaa, 0xbc,
  0xdd, 0xc7, 0xe1, 0x86, 0xf8, 0x91, 0x89, 0x58, 0x83, 0x3d, 0xba, 0x56,
  0xa3, 0x07, 0x21, 0x37, 0xf8, 0xa1, 0x1b, 0x21, 0x41, 0x70, 0x4e, 0xa5,
  0xa4, 0x52, 0x6d, 0x66
};

/* 4096-bit RSA private key (PKCS #8)
-----BEGIN PRIVATE KEY-----
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
sZApBBoMaUXbbssGZtjCRlNX9IUKZYKd
-----END PRIVATE KEY-----
*/

static const uint8_t n_4096[] = { /* key component n, 512 bytes */
  0xc6, 0x1a, 0x6b, 0x4f, 0x5e, 0x62, 0x47, 0xfb, 0x06, 0x0c, 0xb4, 0x93,
  0x4c, 0x73, 0xc6, 0x1b, 0x5a, 0xc7, 0x95, 0x84, 0xd8, 0x0e, 0xbb, 0x53,
  0x44, 0x7c, 0x27, 0x30, 0xc1, 0x2f, 0xf5, 0x7b, 0xfc, 0x67, 0xa2, 0xa4,
  0x62, 0x3e, 0x08, 0xb8, 0x12, 0xa3, 0x17, 0x13, 0x10, 0x43, 0xd7, 0x3d,
  0x6a, 0x1a, 0x61, 0xe3, 0x3a, 0x7a, 0x2e, 0x5c, 0xd7, 0x47, 0x7f, 0xbd,
  0x32, 0xf4, 0x82, 0x21, 0x39, 0xe2, 0xd7, 0x0f, 0x6a, 0x63, 0x84, 0x81,
  0x4d, 0x62, 0xd2, 0xfb, 0xf9, 0x6a, 0xde, 0x51, 0xa7, 0xe0, 0x02, 0x0d,
  0x47, 0x13, 0x61, 0x73, 0xee, 0x8e, 0x0d, 0x0e, 0x70, 0x02, 0xc7, 0xe9,
  0xe9, 0xf0, 0x6a, 0x01, 0xe9, 0xe7, 0x6d, 0xba, 0x07, 0xea, 0x2f, 0x9f,
  0xc7, 0x9e, 0xbb, 0xb3, 0xbb, 0x5a, 0x69, 0x0f, 0x69, 0x36, 0x86, 0xc6,
  0xd5, 0xbd, 0xb5, 0x69, 0xa6, 0x72, 0xc6, 0x22, 0x71, 0xb5, 0x92, 0xe5,
  0xd6, 0x28, 0xe7, 0xf3, 0x37, 0x8c, 0x05, 0x63, 0x5c, 0x82, 0x27, 0xa4,
  0x8b, 0x31, 0x0e, 0xdb, 0x1f, 0x07, 0x2b, 0xf0, 0x94, 0x50, 0x6b, 0x0b,
  0x70, 0x44, 0x8c, 0x94, 0xd4, 0x89, 0xd1, 0x38, 0xd1, 0x4e, 0xad, 0x2d,
  0x70, 0xbb, 0xe1, 0x50, 0xd4, 0x22, 0x2d, 0x55, 0xaf, 0x6a, 0x67, 0xc6,
  0x0b, 0x08, 0xc3, 0x1a, 0xa5, 0x6c, 0x5e, 0x7d, 0xd7, 0x32, 0x9a, 0xd4,
  0x8f, 0x42, 0xe7, 0x53, 0x5f, 0x25, 0x5c, 0xb5, 0xf0, 0x4f, 0x70, 0xc5,
  0xd3, 0x62, 0x90, 0xfe, 0x65, 0x6e, 0x37, 0xa0, 0x3f, 0xc9, 0x0c, 0x3a,
  0x1f, 0x3b, 0xab, 0x10, 0x13, 0x7a, 0x49, 0xca, 0xe0, 0x92, 0x0d, 0x6d,
  0x9e, 0xc0, 0x5b, 0x04, 0xa7, 0xb6, 0x99, 0x9c, 0x91, 0x90, 0xfc, 0x93,
  0x70, 0x3e, 0xa5, 0x8b, 0x1e, 0x08, 0x7c, 0x3a, 0x16, 0xb2, 0xb8, 0xfc,
  0x66, 0xff, 0xc2, 0x5b, 0x8f, 0x83, 0xf2, 0xe8, 0x12, 0x99, 0x7f, 0xde,
  0x1f, 0x98, 0x09, 0x6b, 0xac, 0x91, 0xb1, 0xe7, 0x9b, 0x4e, 0x9d, 0x62,
  0xfa, 0xa5, 0xa0, 0x83, 0x6d, 0x37, 0xc1, 0x28, 0xa8, 0x0a, 0x8f, 0x6f,
  0x05, 0x09, 0x87, 0xe3, 0x44, 0x44, 0xb9, 0xba, 0x67, 0x75, 0x44, 0x53,
  0xb0, 0x19, 0x22, 0x55, 0xcc, 0x90, 0xfd, 0x3e, 0xdf, 0x46, 0x8f, 0x1f,
  0x19, 0x28, 0x0e, 0xe2, 0xc9, 0x1e, 0x1a, 0x29, 0xda, 0x66, 0x7c, 0x56,
  0xee, 0x0d, 0xd2, 0x32, 0x67, 0x63, 0x6e, 0x9f, 0xa2, 0x45, 0x9c, 0x91,
  0x51, 0xd9, 0x70, 0x7b, 0x93, 0x54, 0x07, 0x39, 0xc9, 0xfb, 0x3b, 0x45,
  0xd4, 0xb5, 0x88, 0xd0, 0x6a, 0x1c, 0x1a, 0x29, 0xb9, 0xfc, 0xf4, 0xb1,
  0x64, 0x69, 0xfe, 0xf3, 0x1f, 0xea, 0xd0, 0xdb, 0x7a, 0xb3, 0xc8, 0xdc,
  0x04, 0xc9, 0xae, 0xb0, 0xd8, 0xb3, 0x4f, 0x4e, 0x14, 0x70, 0xeb, 0xd5,
  0x2b, 0x92, 0xdc, 0x7a, 0x77, 0x5d, 0x3e, 0x0e, 0x9f, 0x3a, 0xe1, 0x0b,
  0x6e, 0xce, 0x5e, 0x8f, 0x89, 0x18, 0x23, 0x63, 0x38, 0x8f, 0x9b, 0x09,
  0x57, 0x8e, 0x78, 0x8c, 0x94, 0xab, 0x20, 0x2e, 0xa0, 0x34, 0x95, 0x58,
  0xa6, 0x3b, 0x7b, 0x21, 0x0f, 0x97, 0x5d, 0xb6, 0x8a, 0xe4, 0x04, 0x93,
  0x73, 0x8f, 0xb1, 0x27, 0x81, 0x8e, 0x5d, 0x2c, 0x3f, 0x67, 0x38, 0x53,
  0x1d, 0xc4, 0x55, 0x4e, 0x54, 0x22, 0x80, 0xc4, 0x81, 0x2e, 0x2f, 0x3c,
  0x68, 0xf5, 0xf2, 0x4e, 0xbf, 0xb4, 0x90, 0x07, 0x15, 0x25, 0x29, 0x87,
  0xd7, 0x94, 0x42, 0xe4, 0x57, 0x75, 0x1a, 0x4a, 0xd3, 0xbb, 0x9b, 0xa6,
  0xc7, 0x4d, 0xb2, 0x56, 0xbf, 0xe8, 0x41, 0x83, 0x35, 0x24, 0xc2, 0x8d,
  0x7d, 0x06, 0xe4, 0x9c, 0xd0, 0xca, 0x44, 0x65, 0x0c, 0x77, 0x93, 0xde,
  0xf7, 0x7b, 0xe4, 0xcf, 0x6f, 0x35, 0xac, 0x91
};

static const uint8_t e_4096[] = { /* key component e, 4 bytes */
  0x00, 0x01, 0x00, 0x01
};

static const uint8_t d_4096[] = { /* key component d, 512 bytes */
  0x97, 0xb1, 0xd3, 0x4a, 0x4b, 0x73, 0xe6, 0xba, 0x89, 0xbf, 0x60, 0xe7,
  0x0a, 0x3b, 0xfd, 0x0f, 0x25, 0x4c, 0x7f, 0x69, 0xe2, 0x28, 0x25, 0xb9,
  0x75, 0x4f, 0xbc, 0x92, 0xd0, 0xdb, 0xf0, 0x96, 0xa8, 0x88, 0x93, 0x3a,
  0x5d, 0x20, 0x33, 0x7d, 0x00, 0x88, 0x72, 0x3a, 0xde, 0xd1, 0x94, 0x18,
  0x2b, 0x0f, 0x58, 0xb5, 0xaf, 0x29, 0xb0, 0x26, 0xd7, 0x92, 0xa0, 0x76,
  0x38, 0x76, 0x92, 0xce, 0xee, 0x8c, 0x8d, 0x31, 0xf8, 0xbd, 0x8b, 0xd1,
  0x97, 0x78, 0x7d, 0x27, 0x05, 0xae, 0x97, 0xde, 0xdf, 0x35, 0xe1, 0x5c,
  0x59, 0x78, 0xb5, 0xbf, 0x18, 0x85, 0x1d, 0xea, 0x58, 0x4b, 0x48, 0xda,
  0x0d, 0x91, 0x53, 0x1b, 0x74, 0x09, 0x0b, 0x34, 0xd0, 0xaa, 0xbb, 0x1d,
  0x16, 0xb6, 0xad, 0xf4, 0xcb, 0x1a, 0x48, 0x28, 0xcc, 0xe0, 0x3c, 0x04,
  0x35, 0xd7, 0xb6, 0xfa, 0xd7, 0xc2, 0x3b, 0x86, 0x54, 0x9c, 0x3d, 0x88,
  0x51, 0x9d, 0xb1, 0x3f, 0xc4, 0xe1, 0x2b, 0x9f, 0x12, 0x4f, 0x78, 0x1b,
  0xbf, 0x9a, 0x29, 0x4e, 0x11, 0x4c, 0x64, 0x91, 0x2c, 0x81, 0x07, 0xf7,
  0x12, 0x58, 0xeb, 0x6d, 0x6b, 0xf2, 0xbc, 0x8b, 0x4d, 0x7b, 0x79, 0x90,
  0xba, 0x2a, 0xa4, 0x36, 0x48, 0xba, 0x83, 0x0c, 0x81, 0xee, 0x70, 0xd8,
  0x6d, 0xca, 0x9f, 0xdb, 0xdf, 0xa0, 0x44, 0x1b, 0x08, 0x96, 0x6f, 0x89,
  0x24, 0xca, 0x8e, 0x68, 0x81, 0x0b, 0x13, 0x1b, 0x1e, 0x91, 0x36, 0x41,
  0xc5, 0xc4, 0x4c, 0x53, 0x01, 0x48, 0x8c, 0xbf, 0xe1, 0x18, 0x0a, 0x8c,
  0xd7, 0x2d, 0xd1, 0xa7, 0xd5, 0xc2, 0x66, 0x8f, 0x3b, 0xb7, 0x9b, 0x20,
  0xbd, 0xd7, 0x7d, 0xda, 0xea, 0xb2, 0x20, 0x9e, 0x8b, 0xb9, 0x02, 0x2f,
  0xc4, 0x5b, 0xb4, 0x57, 0xfa, 0xff, 0x74, 0x60, 0xe6, 0xd0, 0xa4, 0x66,
  0x62, 0x58, 0xa6, 0x72, 0x2b, 0x41, 0x3a, 0xb8, 0xab, 0x03, 0xbf, 0x14,
  0x83, 0xb6, 0x22, 0xbe, 0xea, 0xfa, 0x07, 0xf7, 0x5c, 0xbb, 0x34, 0x48,
  0x31, 0xb4, 0xf3, 0x1b, 0xac, 0xd3, 0x61, 0xe7, 0xf9, 0x09, 0x6a, 0x8d,
  0x9c, 0x3c, 0x3f, 0x64, 0xa4, 0xae, 0x9e, 0xe7, 0xae, 0x5c, 0x8a, 0x4b,
  0x4b, 0x88, 0x9d, 0xa0, 0xd9, 0x75, 0x3a, 0x96, 0xa1, 0xf9, 0xef, 0xc6,
  0x51, 0x77, 0x37, 0x9d, 0x30, 0x99, 0xd2, 0x95, 0xa4, 0x19, 0x1a, 0xd2,
  0x95, 0x6e, 0xca, 0xf4, 0x44, 0x3b, 0xda, 0x41, 0xe1, 0x1e, 0xba, 0x8c,
  0xf3, 0x73, 0x5f, 0x65, 0x1c, 0xa6, 0x64, 0x99, 0x45, 0xc0, 0x96, 0x23,
  0xa4, 0x5c, 0xf5, 0x8a, 0xc7, 0x8c, 0xac, 0x64, 0xc5, 0x09, 0x9c, 0x73,
  0x14, 0x50, 0x06, 0x5a, 0xb8, 0x2e, 0x93, 0x77, 0x3d, 0x2f, 0x40, 0x18,
  0x9c, 0xa5, 0x3f, 0x53, 0x6c, 0x2c, 0xdb, 0x78, 0x1f, 0x09, 0x2e, 0x13,
  0xac, 0xc4, 0x86, 0xa0, 0x2c, 0xdc, 0xcd, 0xf2, 0x8c, 0xae, 0xe0, 0xcb,
  0x61, 0x99, 0x3d, 0x92, 0x29, 0x1b, 0x0f, 0xa1, 0x86, 0xd9, 0x03, 0xaa,
  0xe4, 0x7e, 0x82, 0xa0, 0xaf, 0x39, 0x86, 0x8d, 0x6e, 0x14, 0xe2, 0x6f,
  0xa2, 0x9c, 0x0b, 0x13, 0x50, 0x77, 0x8e, 0xed, 0x96, 0x83, 0xab, 0xea,
  0x9a, 0x5e, 0xc4, 0x79, 0x9a, 0x52, 0xb4, 0xf0, 0x9c, 0x63, 0xb5, 0x17,
  0x36, 0x42, 0x0b, 0xb2, 0xa0, 0xc9, 0xed, 0xb2, 0x69, 0x97, 0x94, 0xcd,
  0xcb, 0xb1, 0xbb, 0x89, 0x61, 0x4e, 0x23, 0x51, 0xec, 0x6c, 0x26, 0x30,
  0x19, 0x62, 0xa8, 0xd7, 0xca, 0x43, 0xf1, 0xdf, 0x03, 0xb7, 0xb3, 0x7d,
  0x9e, 0x0d, 0xbc, 0x8a, 0xc4, 0x58, 0x4d, 0x8d, 0x23, 0x82, 0xcc, 0x6b,
  0xcf, 0xfc, 0x3b, 0xf1, 0x73, 0xd0, 0x59, 0x72, 0x62, 0xdf, 0x70, 0x00,
  0x3d, 0x3b, 0xe8, 0x43, 0x4f, 0xf8, 0xb0, 0x01
};

static const uint8_t p_4096[] = { /* key component p, 256 bytes */
  0xc9, 0x6c, 0x26, 0x11, 0xb3, 0x7e, 0x87, 0x65, 0x5c, 0x55, 0xa8, 0xbc,
  0x88, 0x57, 0xf9, 0xb1, 0x5f, 0x6e, 0xe0, 0xd1, 0x5e, 0x73, 0x11, 0xd8,
  0xfb, 0x70, 0xab, 0x21, 0xa2, 0x69, 0xe1, 0x1d, 0xd5, 0xda, 0x01, 0x58,
  0x1d, 0x57, 0x28, 0x88, 0x00, 0xcf, 0x53, 0x7c, 0xa7, 0xf0, 0xed, 0x0f,
  0xc2, 0x6d, 0x54, 0x3c, 0xa6, 0x5e, 0x8a, 0x7f, 0xca, 0x67, 0xdc, 0x4f,
  0x63, 0xce, 0x4d, 0x12, 0x7b, 0x9e, 0xd2, 0xe2, 0x68, 0x6d, 0xea, 0xd6,
  0x05, 0xe2, 0x02, 0x57, 0xf8, 0xa9, 0x7c, 0x90, 0x7d, 0x0a, 0x04, 0xff,
  0x47, 0xf1, 0x5e, 0x24, 0x95, 0x08, 0x3a, 0x27, 0x30, 0xe6, 0x6b, 0xbb,
  0x95, 0xe8, 0x08, 0x67, 0x9a, 0xab, 0x8a, 0xd4, 0x41, 0xc7, 0x68, 0xdd,
  0xd6, 0x92, 0xbe, 0x63, 0x15, 0x72, 0x62, 0xf8, 0x2c, 0x44, 0x37, 0x0d,
  0xa6, 0x19, 0xa8, 0x16, 0x9c, 0x9c, 0x29, 0xf7, 0x6b, 0xb9, 0xb3, 0x57,
  0x03, 0x75, 0xf0, 0xf3, 0x67, 0xbf, 0xfb, 0x1f, 0xa2, 0x15, 0xfa, 0xf9,
  0x40, 0xfc, 0x58, 0xe1, 0x94, 0xf4, 0x5c, 0xda, 0x15, 0x43, 0xb2, 0x82,
  0xa2, 0x7f, 0x06, 0xea, 0x14, 0x74, 0x46, 0x5d, 0xbb, 0x6f, 0xe5, 0x66,
  0x2d, 0x29, 0x47, 0xaa, 0x34, 0x3c, 0x01, 0x7a, 0x6f, 0xcd, 0x7f, 0x68,
  0x92, 0xb4, 0x27, 0x76, 0xe6, 0x97, 0x5c, 0xdf, 0x59, 0x17, 0x31, 0x50,
  0xce, 0x00, 0x73, 0x88, 0x33, 0x3a, 0x07, 0x16, 0x86, 0x75, 0xe0, 0x8a,
  0x8e, 0xfe, 0x0a, 0xe7, 0xe1, 0x88, 0xe5, 0x18, 0x6c, 0x79, 0x86, 0xd8,
  0x46, 0x48, 0x38, 0x04, 0x28, 0x29, 0x12, 0x87, 0x26, 0x69, 0xa7, 0xf6,
  0x78, 0xb6, 0x6e, 0x05, 0x1a, 0x14, 0x26, 0x63, 0x08, 0x4b, 0xf2, 0x6d,
  0xd8, 0x2f, 0x29, 0x45, 0x85, 0x56, 0x47, 0x6c, 0xee, 0x1c, 0x35, 0xe1,
  0x3d, 0xf9, 0x6d, 0xf1
};

static const uint8_t q_4096[] = { /* key component q, 256 bytes */
  0xfb, 0xc8, 0x06, 0xfb, 0x50, 0xe1, 0x8a, 0x5d, 0x91, 0xb3, 0xe0, 0xad,
  0xc3, 0xfd, 0xb6, 0xd1, 0x34, 0xa3, 0x35, 0xe1, 0x09, 0x4b, 0xf5, 0x0d,
  0xf0, 0x6a, 0x54, 0xf0, 0x65, 0xf8, 0xf9, 0x9d, 0xbf, 0xed, 0xb8, 0xbc,
  0x2f, 0x47, 0x01, 0x06, 0x42, 0x39, 0x6c, 0x93, 0x80, 0xb0, 0x77, 0x56,
  0x53, 0xcf, 0x92, 0x42, 0x06, 0x8b, 0x4a, 0x09, 0xdb, 0x11, 0x47, 0xfa,
  0x7a, 0xf2, 0x2a, 0xcb, 0x1a, 0x78, 0x7f, 0x13, 0x64, 0xaf, 0x1f, 0xb4,
  0x20, 0x4a, 0x75, 0xb7, 0xf4, 0x35, 0x05, 0x4b, 0x7b, 0x8e, 0xb8, 0xc6,
  0xdf, 0xca, 0xf6, 0xc9, 0x54, 0x52, 0x8f, 0xa5, 0x95, 0xce, 0xe6, 0x5b,
  0x52, 0x83, 0x38, 0x65, 0xd8, 0x12, 0x84, 0x9c, 0x72, 0xa5, 0xb7, 0x0b,
  0x21, 0xdf, 0xd3, 0xeb, 0x84, 0x47, 0x54, 0x4d, 0x3b, 0xbd, 0xae, 0xd9,
  0x89, 0xd9, 0xa5, 0x11, 0xb4, 0xcb, 0x58, 0x4e, 0xa7, 0xd9, 0xe0, 0xc2,
  0x39, 0xd8, 0xb7, 0xbe, 0xe4, 0x38, 0x83, 0x6f, 0x7b, 0x13, 0xb9, 0xc2,
  0x91, 0x2c, 0x1c, 0x78, 0x4d, 0x28, 0x83, 0x80, 0x24, 0xa8, 0x31, 0x16,
  0x4d, 0x4a, 0x10, 0x7f, 0xbc, 0xc0, 0x82, 0x8a, 0x6b, 0x68, 0xb6, 0xe9,
  0x63, 0xbd, 0xdf, 0x56, 0x37, 0xa2, 0x68, 0xa4, 0x2f, 0x56, 0x22, 0xc4,
  0x49, 0x05, 0x25, 0x3e, 0xbf, 0x2e, 0x87, 0x49, 0x98, 0x3a, 0x5f, 0x96,
  0xf2, 0x2c, 0x96, 0x9e, 0xbd, 0xcd, 0xa3, 0xfa, 0x75, 0xe8, 0x62, 0x1a,
  0xe2, 0xee, 0x91, 0xb0, 0xe4, 0xdb, 0x77, 0xea, 0x61, 0x6b, 0x1e, 0x58,
  0x72, 0x7c, 0xd9, 0x9b, 0xf9, 0x9b, 0x7a, 0x1e, 0x84, 0xcb, 0xe8, 0x9f,
  0xb1, 0x29, 0x7d, 0xc3, 0xa3, 0xe6, 0x89, 0x12, 0xed, 0x52, 0xb2, 0x9d,
  0x13, 0xc6, 0xa9, 0xfc, 0x00, 0x53, 0x70, 0x70, 0xfd, 0x5a, 0xc2, 0x13,
  0x00, 0x68, 0x08, 0xa1
};

static const uint8_t u_4096[] = { /* key component u, 256 bytes */
  0x17, 0x6d, 0x50, 0x05, 0xa2, 0x81, 0x24, 0x76, 0xce, 0xe4, 0x5b, 0xad,
  0xfd, 0x41, 0x05, 0xac, 0x59, 0xe9, 0x03, 0x22, 0x4c, 0x8e, 0x70, 0xe1,
  0xee, 0xfb, 0x66, 0x29, 0xee, 0x8e, 0x9a, 0x59, 0x84, 0x6c, 0x07, 0x71,
  0xbb, 0x3c, 0x78, 0xf1, 0xa0, 0x5a, 0x23, 0x18, 0x35, 0xf9, 0xc6, 0x4e,
  0x58, 0x64, 0xc0, 0xba, 0xa0, 0x35, 0xe7, 0xf6, 0x62, 0x20, 0x35, 0x61,
  0x4f, 0x2b, 0x20, 0x62, 0x90, 0xfb, 0x77, 0x52, 0x0e, 0xdc, 0x17, 0x02,
  0x10, 0xc3, 0xe6, 0x0f, 0xdf, 0x71, 0xf2, 0x94, 0xe8, 0x4b, 0xc6, 0x63,
  0x57, 0x60, 0x9b, 0x78, 0xdb, 0xf9, 0xac, 0x6b, 0xc2, 0x0b, 0xb7, 0x35,
  0xa7, 0xf3, 0xdd, 0x5e, 0x28, 0xdc, 0xb3, 0xea, 0xd4, 0xe2, 0xf5, 0xc4,
  0xbe, 0xa1, 0x8e, 0x53, 0x61, 0x74, 0x82, 0x2d, 0x1c, 0xb4, 0x91, 0x28,
  0x24, 0x97, 0xb0, 0x28, 0xc8, 0x64, 0x12, 0x45, 0xb5, 0xc4, 0x70, 0x31,
  0xcc, 0x87, 0x65, 0x93, 0x4c, 0x1a, 0x05, 0x6c, 0x99, 0x9d, 0x03, 0xf5,
  0x3b, 0x8f, 0x80, 0x1a, 0xe4, 0x40, 0x77, 0x82, 0xc1, 0xb7, 0x6e, 0x22,
  0x5e, 0x7a, 0x6e, 0x27, 0x57, 0xb9, 0x73, 0xd7, 0xc1, 0x4b, 0x41, 0x14,
  0x8d, 0xbb, 0x29, 0x21, 0xd9, 0xa3, 0x43, 0x4d, 0x44, 0x41, 0xe3, 0x20,
  0x0f, 0x6f, 0x71, 0x18, 0x64, 0xc5, 0xc9, 0x94, 0x94, 0x28, 0xb3, 0x4e,
  0x62, 0xe7, 0x69, 0xf9, 0xca, 0xa5, 0xbe, 0x49, 0xd0, 0xf0, 0xef, 0x97,
  0x4e, 0x6a, 0x93, 0x4b, 0xb5, 0xb1, 0x95, 0x75, 0xa1, 0xc6, 0xed, 0x58,
  0x46, 0xf0, 0x27, 0x24, 0x24, 0x9b, 0x6d, 0x48, 0xc0, 0x74, 0x6c, 0x0d,
  0x92, 0xb7, 0x50, 0xe2, 0x7a, 0xce, 0xac, 0x48, 0xcc, 0x6c, 0x3c, 0x2b,
  0x77, 0x06, 0x67, 0x41, 0x8c, 0xd6, 0xce, 0x41, 0x0c, 0x33, 0x8e, 0x8b,
  0x32, 0x74, 0x7c, 0x25
};

static const uint8_t m_4096[] = { /* message to be signed, 512 bytes */
  0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60,
  0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x04, 0x20,
  0x8e, 0x36, 0xfc, 0x9a, 0xa3, 0x17, 0x24, 0xc3, 0x24, 0x16, 0x26, 0x3c,
  0x03, 0x66, 0xa1, 0x75, 0xfa, 0xbb, 0xb9, 0x2b, 0x74, 0x1c, 0xa6, 0x49,
  0x61, 0x07, 0x07, 0x4d, 0x03, 0x43, 0xb5, 0x97
};

static const uint8_t s_4096[] = { /* signed message, 512 bytes */
  0x1f, 0xf4, 0x15, 0x31, 0x5b, 0x8c, 0x8f, 0xb4, 0xe1, 0x8c, 0x9e, 0x7b,
  0x9d, 0x48, 0x3a, 0xa6, 0x3e, 0xd5, 0x86, 0x8e, 0x0e, 0xdc, 0x2f, 0x3c,
  0xae, 0xfd, 0xda, 0xad, 0x6a, 0x6b, 0x3a, 0x73, 0xc9, 0xca, 0x69, 0x79,
  0x85, 0x59, 0xbd, 0xd1, 0xca, 0x7b, 0xf5, 0xe2, 0xc4, 0x32, 0x98, 0xcb,
  0x1e, 0x57, 0x20, 0x3c, 0xe8, 0xd7, 0x8d, 0x3a, 0x73, 0xd9, 0x44, 0xca,
  0x3b, 0x38, 0x92, 0x7c, 0xb0, 0x7c, 0x38, 0x6a, 0x2d, 0xa9, 0x3e, 0xc3,
  0x5e, 0x77, 0xf3, 0x5d, 0x43, 0x3b, 0xea, 0xff, 0x23, 0x2a, 0x13, 0x50,
  0x8c, 0x1a, 0x72, 0xe1, 0xc8, 0x55, 0x53, 0x3d, 0xbb, 0xf9, 0x7f, 0x3f,
  0xb6, 0xf7, 0xec, 0xd9, 0x64, 0x45, 0x8f, 0xc7, 0xf8, 0x9d, 0xb1, 0xcb,
  0x84, 0xa1, 0x6d, 0xbf, 0x15, 0xa2, 0x4e, 0x32, 0xcf, 0xdd, 0x98, 0x72,
  0xe2, 0xfd, 0x43, 0x1d, 0x44, 0xde, 0xed, 0xc5, 0x43, 0x76, 0xdd, 0xf9,
  0x13, 0xb9, 0x5d, 0x30, 0xd0, 0x69, 0xda, 0x2a, 0xce, 0xd0, 0x79, 0x88,
  0xcc, 0x94, 0x7f, 0x35, 0xdf, 0x30, 0xb7, 0x05, 0xa9, 0x54, 0x41, 0x0e,
  0x8a, 0x0d, 0x56, 0xb2, 0xf7, 0x1b, 0xe8, 0xb2, 0xb8, 0xd2, 0xe5, 0x4b,
  0x3d, 0x2a, 0x57, 0x27, 0x02, 0xe0, 0x69, 0xb7, 0x52, 0x8a, 0xb3, 0x39,
  0x5e, 0xdb, 0x5f, 0x52, 0x09, 0x62, 0xe8, 0xf2, 0xdb, 0x50, 0x44, 0x00,
  0x77, 0x8a, 0x49, 0x80, 0xee, 0xf7, 0xad, 0x99, 0xb4, 0x73, 0xd3, 0x01,
  0xca, 0xae, 0x09, 0x9f, 0xad, 0xb0, 0x23, 0xb1, 0x5b, 0x5b, 0xed, 0x34,
  0xb6, 0xbf, 0x71, 0x90, 0xeb, 0xa6, 0x31, 0x58, 0xe5, 0xce, 0xa5, 0x5a,
  0x7c, 0x7c, 0x6a, 0x90, 0x34, 0x3f, 0x84, 0x16, 0x6c, 0x7c, 0xae, 0x1f,
  0x00, 0xab, 0x6a, 0xe5, 0x09, 0x09, 0x83, 0xe8, 0xf0, 0x78, 0xfa, 0xe8,
  0xe9, 0x81, 0xd0, 0x7f, 0xc4, 0x20, 0x70, 0x10, 0xcf, 0xd4, 0x0f, 0x0b,
  0x0f, 0x50, 0x53, 0x15, 0x62, 0xf5, 0x68, 0xcf, 0x7f, 0x3b, 0xdd, 0x1d,
  0x88, 0x7a, 0x9b, 0xea, 0x38, 0x89, 0x70, 0x69, 0x04, 0x0b, 0x54, 0xb3,
  0xc7, 0x9c, 0x27, 0xe3, 0x51, 0xb8, 0xaf, 0x9d, 0xf8, 0xbf, 0xdd, 0x8d,
  0x9f, 0xe2, 0x33, 0xd5, 0x32, 0x44, 0xd1, 0xae, 0xc3, 0x1e, 0x0f, 0xab,
  0xcd, 0x41, 0x9a, 0x5f, 0x48, 0x51, 0xe9, 0x4e, 0x46, 0x89, 0xee, 0x53,
  0xa4, 0x48, 0x36, 0xff, 0xfd, 0xfa, 0xd1, 0xd6, 0xa3, 0x5d, 0xc4, 0xb9,
  0xbd, 0x87, 0x83, 0xcb, 0x6a, 0x00, 0x6d, 0x3c, 0x07, 0x3e, 0xd3, 0xf5,
  0x87, 0xb2, 0xa1, 0x85, 0x13, 0x80, 0x59, 0xac, 0x58, 0x8e, 0xcf, 0xf3,
  0x01, 0x42, 0x09, 0x6b, 0xed, 0x54, 0xbb, 0x82, 0xe6, 0xbb, 0xd9, 0xd2,
  0xfa, 0x02, 0x90, 0x0f, 0x68, 0xff, 0xa8, 0x26, 0x14, 0x02, 0xc3, 0xf3,
  0x39, 0xc4, 0xde, 0x7e, 0x66, 0x23, 0xfe, 0x2e, 0x9d, 0x13, 0xdb, 0xc8,
  0x91, 0x4b, 0x54, 0x7b, 0x2b, 0x78, 0x8b, 0x2b, 0x4e, 0xef, 0x3d, 0x47,
  0x8c, 0xd7, 0x60, 0x9f, 0x45, 0x26, 0xe6, 0x4e, 0x46, 0x9d, 0x35, 0x52,
  0x81, 0x8f, 0xc6, 0xd7, 0x5a, 0x4e, 0x90, 0xc5, 0x1a, 0x69, 0x52, 0x40,
  0x4b, 0x79, 0xef, 0xe7, 0x68, 0x26, 0xe2, 0xbb, 0x52, 0xa5, 0x78, 0xec,
  0xe4, 0xfb, 0x32, 0xcb, 0x81, 0xad, 0xc0, 0x7b, 0xe4, 0x14, 0x12, 0x80,
  0xa8, 0xb8, 0xea, 0xb3, 0xbb, 0x28, 0x74, 0x39, 0x89, 0xfa, 0x38, 0x3d,
  0xa5, 0x8d, 0xfd, 0xb1, 0x3f, 0x20, 0xc1, 0x33, 0x33, 0xa9, 0xcf, 0x1c,
  0xa1, 0xe6, 0x3a, 0x1e, 0x95, 0x46, 0x37, 0xbc, 0xdd, 0x94, 0x34, 0x53,
  0x33, 0xef, 0x46, 0x72, 0xde, 0xc2, 0x87, 0xac, 0xe1, 0xfa, 0xb0, 0x67,
  0xb6, 0xbe, 0x5c, 0x45, 0x78, 0xee, 0xa9, 0xa2
};

typedef struct { const uint8_t *val; size_t len; } rsa_tc_bn_t;
typedef struct { size_t size; rsa_tc_bn_t n, e, d, p, q, u, m, s; } rsa_tc_t;

static const rsa_tc_t rsa_tc[] = {
  { 1024,
    { n_1024, sizeof(n_1024) },
    { e_1024, sizeof(e_1024) },
    { d_1024, sizeof(d_1024) },
    { p_1024, sizeof(p_1024) },
    { q_1024, sizeof(q_1024) },
    { u_1024, sizeof(u_1024) },
    { m_1024, sizeof(m_1024) },
    { s_1024, sizeof(s_1024) }
  },
  { 2048,
    { n_2048, sizeof(n_2048) },
    { e_2048, sizeof(e_2048) },
    { d_2048, sizeof(d_2048) },
    { p_2048, sizeof(p_2048) },
    { q_2048, sizeof(q_2048) },
    { u_2048, sizeof(u_2048) },
    { m_2048, sizeof(m_2048) },
    { s_2048, sizeof(s_2048) }
  },
  { 4096,
    { n_4096, sizeof(n_4096) },
    { e_4096, sizeof(e_4096) },
    { d_4096, sizeof(d_4096) },
    { p_4096, sizeof(p_4096) },
    { q_4096, sizeof(q_4096) },
    { u_4096, sizeof(u_4096) },
    { m_4096, sizeof(m_4096) },
    { s_4096, sizeof(s_4096) }
  }
};
